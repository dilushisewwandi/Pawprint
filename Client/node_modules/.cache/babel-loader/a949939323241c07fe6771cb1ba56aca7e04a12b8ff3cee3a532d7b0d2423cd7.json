{"ast":null,"code":"var _jsxFileName = \"G:\\\\My 2025\\\\Study\\\\Pawprint-Dogcare-main\\\\Pawprint-Dogcare-main\\\\Client\\\\src\\\\Components\\\\VetRegiForm.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import './VetRegiForm.css'; \n\n// function VetRegiForm() {\n//   const [values, setValues] = useState({\n//     vetName: '',\n//     vetEmail: '',\n//     vetSpecialization: '',\n//     vetPhone: '',\n//     clinic: '',\n//     userID: ''\n//   });\n\n//   const [errors, setErrors] = useState({});\n//   const navigate = useNavigate(); \n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     const validationErrors = validateInputs(values);\n//     setErrors(validationErrors);\n\n//     if (Object.keys(validationErrors).length === 0) {\n//       try {\n//         const response = await fetch('http://localhost:8800/api/vet/register', {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json'\n//           },\n//           body: JSON.stringify(values)\n//         });\n\n//         if (response.ok) {\n//           alert('Veterinarian registered successfully');\n\n//         } else {\n//           console.error('Error storing data:', response.statusText);\n//         }\n//       } catch (error) {\n//         console.error('Error:', error);\n//       }\n//     }\n//   };\n\n//   const handleInput = (event) => {\n//     const { name, value } = event.target;\n//     setValues(prev => ({ ...prev, [name]: value }));\n//   };\n\n//   const validateInputs = (values) => {\n//     let errors = {};\n//     if (!values.vetName) errors.vetName = 'Veterinarian Name is required';\n//     if (!values.vetEmail) errors.vetEmail = 'Veterinarian Email is required';\n//     if (!values.vetSpecialization) errors.vetSpecialization = 'Specialization is required';\n//     if (!values.vetPhone) errors.vetPhone = 'Veterinarian Phone is required';\n//     if (!values.clinic) errors.clinic = 'Clinic Name is required';\n//     if (!values.userID) errors.userID = 'User ID is required';\n//     return errors;\n//   };\n\n//   const backgroundStyle = {\n//     backgroundImage: \"url('/images/login1.jpg')\",\n//     backgroundSize: 'cover',\n//     backgroundPosition: 'center',\n//     minHeight: '100vh',\n//     display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'center'\n//   };\n\n//   return (\n//     <div className=\"form-container\" style={backgroundStyle}>\n//       <div className=\"registration-content\">\n//         <h1 className=\"welcome-message\">Join Our Veterinary Network</h1>\n//         <div className=\"registration-card\">\n//           <div className=\"registration-card-body\">\n//             <h2 className=\"regi-form-name\">Veterinarian Registration</h2>\n//             <form onSubmit={handleSubmit}>\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"vetName\">Vet Name</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"vetName\"\n//                   value={values.vetName}\n//                   onChange={handleInput}\n//                   required\n//                   placeholder=\"Enter Veterinarian Name\"\n//                 />\n//                 {errors.vetName && <span className=\"text-danger\">{errors.vetName}</span>}\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"vetEmail\">Vet Email</label>\n//                 <input\n//                   type=\"email\"\n//                   name=\"vetEmail\"\n//                   value={values.vetEmail}\n//                   onChange={handleInput}\n//                   required\n//                   placeholder=\"Enter Veterinarian Email\"\n//                 />\n//                 {errors.vetEmail && <span className=\"text-danger\">{errors.vetEmail}</span>}\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"vetSpecialization\">Specialization</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"vetSpecialization\"\n//                   value={values.vetSpecialization}\n//                   onChange={handleInput}\n//                   required\n//                   placeholder=\"Enter Specialization\"\n//                 />\n//                 {errors.vetSpecialization && <span className=\"text-danger\">{errors.vetSpecialization}</span>}\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"vetPhone\">Vet Phone</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"vetPhone\"\n//                   value={values.vetPhone}\n//                   onChange={handleInput}\n//                   required\n//                   placeholder=\"Enter Phone\"\n//                 />\n//                 {errors.vetPhone && <span className=\"text-danger\">{errors.vetPhone}</span>}\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"clinic\">Vet Clinic</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"clinic\"\n//                   value={values.clinic}\n//                   onChange={handleInput}\n//                   required\n//                   placeholder=\"Enter Clinic\"\n//                 />\n//                 {errors.clinic && <span className=\"text-danger\">{errors.clinic}</span>}\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"userID\">User ID</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"userID\"\n//                   value={values.userID}\n//                   onChange={handleInput}\n//                   required\n//                   placeholder=\"Enter User ID\"\n//                 />\n//                 {errors.userID && <span className=\"text-danger\">{errors.userID}</span>}\n//               </div>\n\n//               <button type=\"submit\" className='vet-regi-submit'>Register</button>\n//             </form>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default VetRegiForm;\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './VetRegiForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VetRegiForm() {\n  _s();\n  const [values, setValues] = useState({\n    vetName: '',\n    vetEmail: '',\n    vetSpecialization: '',\n    vetPhone: '',\n    clinic: '',\n    userID: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [serverError, setServerError] = useState(''); // State for server error messages\n  const navigate = useNavigate();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const validationErrors = validateInputs(values);\n    setErrors(validationErrors);\n    if (Object.keys(validationErrors).length === 0) {\n      try {\n        const response = await fetch('http://localhost:8800/api/vet/register', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(values)\n        });\n        if (response.ok) {\n          alert('Veterinarian registered successfully');\n          setServerError(''); // Clear any previous server errors\n        } else {\n          const errorData = await response.json();\n          setServerError(errorData.error || 'Error registering veterinarian');\n        }\n      } catch (error) {\n        setServerError('Failed to connect to the server. Please try again.');\n        console.error('Error:', error);\n      }\n    }\n  };\n  const handleInput = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setValues(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const validateInputs = values => {\n    let errors = {};\n    if (!values.vetName) errors.vetName = 'Veterinarian Name is required';\n    if (!values.vetEmail) errors.vetEmail = 'Veterinarian Email is required';\n    if (!values.vetSpecialization) errors.vetSpecialization = 'Specialization is required';\n    if (!values.vetPhone) errors.vetPhone = 'Veterinarian Phone is required';\n    if (!values.clinic) errors.clinic = 'Clinic Name is required';\n    if (!values.userID) errors.userID = 'User ID is required';\n    return errors;\n  };\n  const backgroundStyle = {\n    backgroundImage: \"url('/images/login1.jpg')\",\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    minHeight: '100vh',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    style: backgroundStyle,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"registration-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"welcome-message\",\n        children: \"Join Our Veterinary Network\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"registration-card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"registration-card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"regi-form-name\",\n            children: \"Veterinarian Registration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"vetName\",\n                children: \"Vet Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"vetName\",\n                value: values.vetName,\n                onChange: handleInput,\n                required: true,\n                placeholder: \"Enter Veterinarian Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 17\n              }, this), errors.vetName && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-danger\",\n                children: errors.vetName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 36\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"vetEmail\",\n                children: \"Vet Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                name: \"vetEmail\",\n                value: values.vetEmail,\n                onChange: handleInput,\n                required: true,\n                placeholder: \"Enter Veterinarian Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 17\n              }, this), errors.vetEmail && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-danger\",\n                children: errors.vetEmail\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"vetSpecialization\",\n                children: \"Specialization\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"vetSpecialization\",\n                value: values.vetSpecialization,\n                onChange: handleInput,\n                required: true,\n                placeholder: \"Enter Specialization\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 17\n              }, this), errors.vetSpecialization && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-danger\",\n                children: errors.vetSpecialization\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 46\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"vetPhone\",\n                children: \"Vet Phone\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"vetPhone\",\n                value: values.vetPhone,\n                onChange: handleInput,\n                required: true,\n                placeholder: \"Enter Phone\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 17\n              }, this), errors.vetPhone && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-danger\",\n                children: errors.vetPhone\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"clinic\",\n                children: \"Vet Clinic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"clinic\",\n                value: values.clinic,\n                onChange: handleInput,\n                required: true,\n                placeholder: \"Enter Clinic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 17\n              }, this), errors.clinic && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-danger\",\n                children: errors.clinic\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"userID\",\n                children: \"User ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"userID\",\n                value: values.userID,\n                onChange: handleInput,\n                required: true,\n                placeholder: \"Enter User ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 17\n              }, this), errors.userID && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-danger\",\n                children: errors.userID\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this), serverError && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-danger\",\n              children: serverError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 31\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"vet-regi-submit\",\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 5\n  }, this);\n}\n_s(VetRegiForm, \"rrq61Aq1BEopiAgChtk0U4caFqQ=\", false, function () {\n  return [useNavigate];\n});\n_c = VetRegiForm;\nexport default VetRegiForm;\nvar _c;\n$RefreshReg$(_c, \"VetRegiForm\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","VetRegiForm","_s","values","setValues","vetName","vetEmail","vetSpecialization","vetPhone","clinic","userID","errors","setErrors","serverError","setServerError","navigate","handleSubmit","event","preventDefault","validationErrors","validateInputs","Object","keys","length","response","fetch","method","headers","body","JSON","stringify","ok","alert","errorData","json","error","console","handleInput","name","value","target","prev","backgroundStyle","backgroundImage","backgroundSize","backgroundPosition","minHeight","display","alignItems","justifyContent","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","onChange","required","placeholder","_c","$RefreshReg$"],"sources":["G:/My 2025/Study/Pawprint-Dogcare-main/Pawprint-Dogcare-main/Client/src/Components/VetRegiForm.jsx"],"sourcesContent":["// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import './VetRegiForm.css'; \n\n// function VetRegiForm() {\n//   const [values, setValues] = useState({\n//     vetName: '',\n//     vetEmail: '',\n//     vetSpecialization: '',\n//     vetPhone: '',\n//     clinic: '',\n//     userID: ''\n//   });\n\n//   const [errors, setErrors] = useState({});\n//   const navigate = useNavigate(); \n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     const validationErrors = validateInputs(values);\n//     setErrors(validationErrors);\n\n//     if (Object.keys(validationErrors).length === 0) {\n//       try {\n//         const response = await fetch('http://localhost:8800/api/vet/register', {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json'\n//           },\n//           body: JSON.stringify(values)\n//         });\n\n//         if (response.ok) {\n//           alert('Veterinarian registered successfully');\n         \n//         } else {\n//           console.error('Error storing data:', response.statusText);\n//         }\n//       } catch (error) {\n//         console.error('Error:', error);\n//       }\n//     }\n//   };\n\n//   const handleInput = (event) => {\n//     const { name, value } = event.target;\n//     setValues(prev => ({ ...prev, [name]: value }));\n//   };\n\n//   const validateInputs = (values) => {\n//     let errors = {};\n//     if (!values.vetName) errors.vetName = 'Veterinarian Name is required';\n//     if (!values.vetEmail) errors.vetEmail = 'Veterinarian Email is required';\n//     if (!values.vetSpecialization) errors.vetSpecialization = 'Specialization is required';\n//     if (!values.vetPhone) errors.vetPhone = 'Veterinarian Phone is required';\n//     if (!values.clinic) errors.clinic = 'Clinic Name is required';\n//     if (!values.userID) errors.userID = 'User ID is required';\n//     return errors;\n//   };\n\n//   const backgroundStyle = {\n//     backgroundImage: \"url('/images/login1.jpg')\",\n//     backgroundSize: 'cover',\n//     backgroundPosition: 'center',\n//     minHeight: '100vh',\n//     display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'center'\n//   };\n\n//   return (\n//     <div className=\"form-container\" style={backgroundStyle}>\n//       <div className=\"registration-content\">\n//         <h1 className=\"welcome-message\">Join Our Veterinary Network</h1>\n//         <div className=\"registration-card\">\n//           <div className=\"registration-card-body\">\n//             <h2 className=\"regi-form-name\">Veterinarian Registration</h2>\n//             <form onSubmit={handleSubmit}>\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"vetName\">Vet Name</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"vetName\"\n//                   value={values.vetName}\n//                   onChange={handleInput}\n//                   required\n//                   placeholder=\"Enter Veterinarian Name\"\n//                 />\n//                 {errors.vetName && <span className=\"text-danger\">{errors.vetName}</span>}\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"vetEmail\">Vet Email</label>\n//                 <input\n//                   type=\"email\"\n//                   name=\"vetEmail\"\n//                   value={values.vetEmail}\n//                   onChange={handleInput}\n//                   required\n//                   placeholder=\"Enter Veterinarian Email\"\n//                 />\n//                 {errors.vetEmail && <span className=\"text-danger\">{errors.vetEmail}</span>}\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"vetSpecialization\">Specialization</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"vetSpecialization\"\n//                   value={values.vetSpecialization}\n//                   onChange={handleInput}\n//                   required\n//                   placeholder=\"Enter Specialization\"\n//                 />\n//                 {errors.vetSpecialization && <span className=\"text-danger\">{errors.vetSpecialization}</span>}\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"vetPhone\">Vet Phone</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"vetPhone\"\n//                   value={values.vetPhone}\n//                   onChange={handleInput}\n//                   required\n//                   placeholder=\"Enter Phone\"\n//                 />\n//                 {errors.vetPhone && <span className=\"text-danger\">{errors.vetPhone}</span>}\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"clinic\">Vet Clinic</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"clinic\"\n//                   value={values.clinic}\n//                   onChange={handleInput}\n//                   required\n//                   placeholder=\"Enter Clinic\"\n//                 />\n//                 {errors.clinic && <span className=\"text-danger\">{errors.clinic}</span>}\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"userID\">User ID</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"userID\"\n//                   value={values.userID}\n//                   onChange={handleInput}\n//                   required\n//                   placeholder=\"Enter User ID\"\n//                 />\n//                 {errors.userID && <span className=\"text-danger\">{errors.userID}</span>}\n//               </div>\n\n//               <button type=\"submit\" className='vet-regi-submit'>Register</button>\n//             </form>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default VetRegiForm;\n\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './VetRegiForm.css'; \n\nfunction VetRegiForm() {\n  const [values, setValues] = useState({\n    vetName: '',\n    vetEmail: '',\n    vetSpecialization: '',\n    vetPhone: '',\n    clinic: '',\n    userID: ''\n  });\n\n  const [errors, setErrors] = useState({});\n  const [serverError, setServerError] = useState(''); // State for server error messages\n  const navigate = useNavigate(); \n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const validationErrors = validateInputs(values);\n    setErrors(validationErrors);\n\n    if (Object.keys(validationErrors).length === 0) {\n      try {\n        const response = await fetch('http://localhost:8800/api/vet/register', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(values)\n        });\n\n        if (response.ok) {\n          alert('Veterinarian registered successfully');\n          setServerError(''); // Clear any previous server errors\n        } else {\n          const errorData = await response.json();\n          setServerError(errorData.error || 'Error registering veterinarian');\n        }\n      } catch (error) {\n        setServerError('Failed to connect to the server. Please try again.');\n        console.error('Error:', error);\n      }\n    }\n  };\n\n  const handleInput = (event) => {\n    const { name, value } = event.target;\n    setValues(prev => ({ ...prev, [name]: value }));\n  };\n\n  const validateInputs = (values) => {\n    let errors = {};\n    if (!values.vetName) errors.vetName = 'Veterinarian Name is required';\n    if (!values.vetEmail) errors.vetEmail = 'Veterinarian Email is required';\n    if (!values.vetSpecialization) errors.vetSpecialization = 'Specialization is required';\n    if (!values.vetPhone) errors.vetPhone = 'Veterinarian Phone is required';\n    if (!values.clinic) errors.clinic = 'Clinic Name is required';\n    if (!values.userID) errors.userID = 'User ID is required';\n    return errors;\n  };\n\n  const backgroundStyle = {\n    backgroundImage: \"url('/images/login1.jpg')\",\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    minHeight: '100vh',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  };\n\n  return (\n    <div className=\"form-container\" style={backgroundStyle}>\n      <div className=\"registration-content\">\n        <h1 className=\"welcome-message\">Join Our Veterinary Network</h1>\n        <div className=\"registration-card\">\n          <div className=\"registration-card-body\">\n            <h2 className=\"regi-form-name\">Veterinarian Registration</h2>\n            <form onSubmit={handleSubmit}>\n              <div className=\"form-group\">\n                <label htmlFor=\"vetName\">Vet Name</label>\n                <input\n                  type=\"text\"\n                  name=\"vetName\"\n                  value={values.vetName}\n                  onChange={handleInput}\n                  required\n                  placeholder=\"Enter Veterinarian Name\"\n                />\n                {errors.vetName && <span className=\"text-danger\">{errors.vetName}</span>}\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"vetEmail\">Vet Email</label>\n                <input\n                  type=\"email\"\n                  name=\"vetEmail\"\n                  value={values.vetEmail}\n                  onChange={handleInput}\n                  required\n                  placeholder=\"Enter Veterinarian Email\"\n                />\n                {errors.vetEmail && <span className=\"text-danger\">{errors.vetEmail}</span>}\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"vetSpecialization\">Specialization</label>\n                <input\n                  type=\"text\"\n                  name=\"vetSpecialization\"\n                  value={values.vetSpecialization}\n                  onChange={handleInput}\n                  required\n                  placeholder=\"Enter Specialization\"\n                />\n                {errors.vetSpecialization && <span className=\"text-danger\">{errors.vetSpecialization}</span>}\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"vetPhone\">Vet Phone</label>\n                <input\n                  type=\"text\"\n                  name=\"vetPhone\"\n                  value={values.vetPhone}\n                  onChange={handleInput}\n                  required\n                  placeholder=\"Enter Phone\"\n                />\n                {errors.vetPhone && <span className=\"text-danger\">{errors.vetPhone}</span>}\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"clinic\">Vet Clinic</label>\n                <input\n                  type=\"text\"\n                  name=\"clinic\"\n                  value={values.clinic}\n                  onChange={handleInput}\n                  required\n                  placeholder=\"Enter Clinic\"\n                />\n                {errors.clinic && <span className=\"text-danger\">{errors.clinic}</span>}\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"userID\">User ID</label>\n                <input\n                  type=\"text\"\n                  name=\"userID\"\n                  value={values.userID}\n                  onChange={handleInput}\n                  required\n                  placeholder=\"Enter User ID\"\n                />\n                {errors.userID && <span className=\"text-danger\">{errors.userID}</span>}\n              </div>\n\n              {serverError && <div className=\"text-danger\">{serverError}</div>} {/* Display server error here */}\n\n              <button type=\"submit\" className='vet-regi-submit'>Register</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default VetRegiForm;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC;IACnCQ,OAAO,EAAE,EAAE;IACXC,QAAQ,EAAE,EAAE;IACZC,iBAAiB,EAAE,EAAE;IACrBC,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACgB,WAAW,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}