{"ast":null,"code":"var _jsxFileName = \"G:\\\\My 2025\\\\Study\\\\Pawprint-Dogcare-main\\\\Pawprint-Dogcare-main\\\\Client\\\\src\\\\Components\\\\DaycareRegiForm.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import './DaycareRegiForm.css';\n// import { useNavigate } from 'react-router-dom';\n\n// function DaycareRegiForm() {\n//   const [values, setValues] = useState({\n// dcName: '',\n// dcLocation: '',\n// dcPhone: '',\n// dcEmail: '',\n// openDays: '',\n// openTimes: '',\n// noOfStaffMembers: '',\n// amenitiesOffered: '',\n// safetyFeatures: '',\n// userID: ''\n//   });\n\n//   const [errors, setErrors] = useState({});\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     const validationErrors = validateInputs(values);\n//     setErrors(validationErrors);\n\n//     if (Object.keys(validationErrors).length === 0) {\n//       try {\n//         const response = await fetch('http://localhost:8800/api/daycare/register', {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json'\n//           },\n//           body: JSON.stringify(values)\n//         });\n\n//         const result = await response.json();\n\n//         if (response.ok) {\n//           alert(result.message || 'Daycare registered successfully');\n//         } else {\n//           alert(result.error || 'This user ID is wrong or already assigned. Please sign up.');\n//           navigate('/signup');\n//         }\n//       } catch (error) {\n//         console.error('Error:', error);\n//       }\n//     }\n//   };\n\n//   const handleInput = (event) => {\n//     const { name, value } = event.target;\n//     setValues((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   const validateInputs = (values) => {\n//     let errors = {};\n//     if (!values.dcName) errors.dcName = 'Daycare Name is required';\n//     if (!values.dcEmail) errors.dcEmail = 'Daycare Email is required';\n//     if (!values.dcPhone) errors.dcPhone = 'Daycare Phone is required';\n//     if (!values.dcLocation) errors.dcLocation = 'Daycare Location is required';\n//     if (!values.userID) errors.userID = 'User ID is required';\n//     return errors;\n//   };\n\n//   const backgroundStyle = {\n//     backgroundImage: \"url('/images/daycare.jpg')\",\n//     backgroundSize: 'cover',\n//     backgroundPosition: 'center',\n//     minHeight: '100vh',\n//     display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'center'\n//   };\n\n//   return (\n//     <div className=\"dc-form-container\" style={backgroundStyle}>\n//       <h1 className=\"dc-welcome-message\">Register Your Daycare</h1>\n//       <div className=\"dc-registration-card\">\n//         <div className=\"dc-registration-card-body\">\n//           <h2 className=\"dc-regi-form-name\">Daycare Registration</h2>\n//           <form onSubmit={handleSubmit}>\n//             <div className=\"dc-form-group\">\n//               <label htmlFor=\"dcName\">Daycare Name</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"dcName\"\n//                 value={values.dcName}\n//                 onChange={handleInput}\n//                 required\n//                 placeholder=\"Enter Daycare Name\"\n//               />\n//               {errors.dcName && <span className=\"text-danger\">{errors.dcName}</span>}\n//             </div>\n\n//             <div className=\"dc-form-group\">\n//               <label htmlFor=\"dcEmail\">Daycare Email</label>\n//               <input\n//                 type=\"email\"\n//                 name=\"dcEmail\"\n//                 value={values.dcEmail}\n//                 onChange={handleInput}\n//                 required\n//                 placeholder=\"Enter Daycare Email\"\n//               />\n//               {errors.dcEmail && <span className=\"text-danger\">{errors.dcEmail}</span>}\n//             </div>\n\n//             <div className=\"dc-form-group\">\n//               <label htmlFor=\"dcPhone\">Daycare Phone</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"dcPhone\"\n//                 value={values.dcPhone}\n//                 onChange={handleInput}\n//                 required\n//                 placeholder=\"Enter Phone\"\n//               />\n//               {errors.dcPhone && <span className=\"text-danger\">{errors.dcPhone}</span>}\n//             </div>\n\n//             <div className=\"dc-form-group\">\n//               <label htmlFor=\"dcLocation\">Daycare Location</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"dcLocation\"\n//                 value={values.dcLocation}\n//                 onChange={handleInput}\n//                 required\n//                 placeholder=\"Enter Location\"\n//               />\n//               {errors.dcLocation && <span className=\"text-danger\">{errors.dcLocation}</span>}\n//             </div>\n\n//             <div className=\"dc-form-group\">\n//               <label htmlFor=\"userID\">User ID</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"userID\"\n//                 value={values.userID}\n//                 onChange={handleInput}\n//                 required\n//                 placeholder=\"Enter User ID\"\n//               />\n//               {errors.userID && <span className=\"text-danger\">{errors.userID}</span>}\n//             </div>\n\n//             <div className=\"dc-form-group\">\n//               <label htmlFor=\"openDays\">Open Days</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"openDays\"\n//                 value={values.openDays}\n//                 onChange={handleInput}\n//                 placeholder=\"Enter Open Days\"\n//               />\n//             </div>\n\n//             <div className=\"dc-form-group\">\n//               <label htmlFor=\"openTimes\">Open Times</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"openTimes\"\n//                 value={values.openTimes}\n//                 onChange={handleInput}\n//                 placeholder=\"Enter Open Times\"\n//               />\n//             </div>\n\n//             <div className=\"dc-form-group\">\n//               <label htmlFor=\"noOfStaffMembers\">Number of Staff Members</label>\n//               <input\n//                 type=\"number\"\n//                 name=\"noOfStaffMembers\"\n//                 value={values.noOfStaffMembers}\n//                 onChange={handleInput}\n//                 placeholder=\"Enter Number of Staff Members\"\n//               />\n//             </div>\n\n//             <div className=\"dc-form-group\">\n//               <label htmlFor=\"amenitiesOffered\">Amenities Offered</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"amenitiesOffered\"\n//                 value={values.amenitiesOffered}\n//                 onChange={handleInput}\n//                 placeholder=\"Enter Amenities Offered\"\n//               />\n//             </div>\n\n//             <div className=\"dc-form-group\">\n//               <label htmlFor=\"safetyFeatures\">Safety Features</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"safetyFeatures\"\n//                 value={values.safetyFeatures}\n//                 onChange={handleInput}\n//                 placeholder=\"Enter Safety Features\"\n//               />\n//             </div>\n\n//             <button type=\"submit\" className=\"dc-regi-submit\">Register</button>\n//           </form>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default DaycareRegiForm;\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FaUserEdit, FaTrashAlt, FaPlusCircle } from 'react-icons/fa';\nimport './DaycareRegiForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DaycareRegiForm() {\n  _s();\n  const [values, setValues] = useState({\n    userID: '',\n    dcName: '',\n    dcLocation: '',\n    dcPhone: '',\n    dcEmail: '',\n    openDays: '',\n    openTimes: '',\n    noOfStaffMembers: '',\n    amenitiesOffered: '',\n    safetyFeatures: ''\n  });\n  const [updateValues, setUpdateValues] = useState({\n    userID: '',\n    dcName: '',\n    dcLocation: '',\n    dcPhone: '',\n    dcEmail: '',\n    openDays: '',\n    openTimes: '',\n    noOfStaffMembers: '',\n    amenitiesOffered: '',\n    safetyFeatures: ''\n  });\n  const [deleteUserID, setDeleteUserID] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch('http://localhost:8800/api/daycare/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(values)\n      });\n      const result = await response.json();\n      alert(response.ok ? 'Daycare registered successfully' : result.error || 'Registration failed');\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const handleUpdate = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:8800/api/daycare/update/${updateValues.userID}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updateValues)\n      });\n      const result = await response.json();\n      alert(response.ok ? 'Daycare updated successfully' : result.error || 'Update failed');\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const handleDelete = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:8800/api/daycare/delete/${deleteUserID}`, {\n        method: 'DELETE'\n      });\n      const result = await response.json();\n      alert(response.ok ? 'Daycare deleted successfully' : result.error || 'Deletion failed');\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"daycare-management\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"daycare-management-title\",\n      children: \"Daycare Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"form-section-title\",\n        children: [/*#__PURE__*/_jsxDEV(FaPlusCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 44\n        }, this), \" Register Daycare\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [Object.keys(values).map(key => /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-input\",\n          type: \"text\",\n          placeholder: key.replace(/([A-Z])/g, ' $1').trim(),\n          onChange: e => setValues({\n            ...values,\n            [key]: e.target.value\n          }),\n          required: true\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"form-button\",\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"form-section-title\",\n        children: [/*#__PURE__*/_jsxDEV(FaUserEdit, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 44\n        }, this), \" Update Daycare\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleUpdate,\n        children: [Object.keys(updateValues).map(key => /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-input\",\n          type: \"text\",\n          placeholder: key.replace(/([A-Z])/g, ' $1').trim(),\n          onChange: e => setUpdateValues({\n            ...updateValues,\n            [key]: e.target.value\n          }),\n          required: true\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"form-button\",\n          type: \"submit\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"form-section-title\",\n        children: [/*#__PURE__*/_jsxDEV(FaTrashAlt, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 44\n        }, this), \" Delete Daycare\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleDelete,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-input\",\n          type: \"text\",\n          placeholder: \"User ID\",\n          onChange: e => setDeleteUserID(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"form-button\",\n          type: \"submit\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 5\n  }, this);\n}\n_s(DaycareRegiForm, \"vwgDiGxc3hkQXDUfXzgiGSvXCpc=\", false, function () {\n  return [useNavigate];\n});\n_c = DaycareRegiForm;\nexport default DaycareRegiForm;\nvar _c;\n$RefreshReg$(_c, \"DaycareRegiForm\");","map":{"version":3,"names":["React","useState","useNavigate","FaUserEdit","FaTrashAlt","FaPlusCircle","jsxDEV","_jsxDEV","DaycareRegiForm","_s","values","setValues","userID","dcName","dcLocation","dcPhone","dcEmail","openDays","openTimes","noOfStaffMembers","amenitiesOffered","safetyFeatures","updateValues","setUpdateValues","deleteUserID","setDeleteUserID","navigate","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","json","alert","ok","error","console","handleUpdate","handleDelete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Object","keys","map","key","type","placeholder","replace","trim","onChange","e","target","value","required","_c","$RefreshReg$"],"sources":["G:/My 2025/Study/Pawprint-Dogcare-main/Pawprint-Dogcare-main/Client/src/Components/DaycareRegiForm.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import './DaycareRegiForm.css';\n// import { useNavigate } from 'react-router-dom';\n\n// function DaycareRegiForm() {\n//   const [values, setValues] = useState({\n    // dcName: '',\n    // dcLocation: '',\n    // dcPhone: '',\n    // dcEmail: '',\n    // openDays: '',\n    // openTimes: '',\n    // noOfStaffMembers: '',\n    // amenitiesOffered: '',\n    // safetyFeatures: '',\n    // userID: ''\n//   });\n\n//   const [errors, setErrors] = useState({});\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     const validationErrors = validateInputs(values);\n//     setErrors(validationErrors);\n\n//     if (Object.keys(validationErrors).length === 0) {\n//       try {\n//         const response = await fetch('http://localhost:8800/api/daycare/register', {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json'\n//           },\n//           body: JSON.stringify(values)\n//         });\n\n//         const result = await response.json();\n\n//         if (response.ok) {\n//           alert(result.message || 'Daycare registered successfully');\n//         } else {\n//           alert(result.error || 'This user ID is wrong or already assigned. Please sign up.');\n//           navigate('/signup');\n//         }\n//       } catch (error) {\n//         console.error('Error:', error);\n//       }\n//     }\n//   };\n\n//   const handleInput = (event) => {\n//     const { name, value } = event.target;\n//     setValues((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   const validateInputs = (values) => {\n//     let errors = {};\n//     if (!values.dcName) errors.dcName = 'Daycare Name is required';\n//     if (!values.dcEmail) errors.dcEmail = 'Daycare Email is required';\n//     if (!values.dcPhone) errors.dcPhone = 'Daycare Phone is required';\n//     if (!values.dcLocation) errors.dcLocation = 'Daycare Location is required';\n//     if (!values.userID) errors.userID = 'User ID is required';\n//     return errors;\n//   };\n\n//   const backgroundStyle = {\n//     backgroundImage: \"url('/images/daycare.jpg')\",\n//     backgroundSize: 'cover',\n//     backgroundPosition: 'center',\n//     minHeight: '100vh',\n//     display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'center'\n//   };\n\n//   return (\n//     <div className=\"dc-form-container\" style={backgroundStyle}>\n//       <h1 className=\"dc-welcome-message\">Register Your Daycare</h1>\n//       <div className=\"dc-registration-card\">\n//         <div className=\"dc-registration-card-body\">\n//           <h2 className=\"dc-regi-form-name\">Daycare Registration</h2>\n//           <form onSubmit={handleSubmit}>\n//             <div className=\"dc-form-group\">\n//               <label htmlFor=\"dcName\">Daycare Name</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"dcName\"\n//                 value={values.dcName}\n//                 onChange={handleInput}\n//                 required\n//                 placeholder=\"Enter Daycare Name\"\n//               />\n//               {errors.dcName && <span className=\"text-danger\">{errors.dcName}</span>}\n//             </div>\n\n//             <div className=\"dc-form-group\">\n//               <label htmlFor=\"dcEmail\">Daycare Email</label>\n//               <input\n//                 type=\"email\"\n//                 name=\"dcEmail\"\n//                 value={values.dcEmail}\n//                 onChange={handleInput}\n//                 required\n//                 placeholder=\"Enter Daycare Email\"\n//               />\n//               {errors.dcEmail && <span className=\"text-danger\">{errors.dcEmail}</span>}\n//             </div>\n\n//             <div className=\"dc-form-group\">\n//               <label htmlFor=\"dcPhone\">Daycare Phone</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"dcPhone\"\n//                 value={values.dcPhone}\n//                 onChange={handleInput}\n//                 required\n//                 placeholder=\"Enter Phone\"\n//               />\n//               {errors.dcPhone && <span className=\"text-danger\">{errors.dcPhone}</span>}\n//             </div>\n\n//             <div className=\"dc-form-group\">\n//               <label htmlFor=\"dcLocation\">Daycare Location</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"dcLocation\"\n//                 value={values.dcLocation}\n//                 onChange={handleInput}\n//                 required\n//                 placeholder=\"Enter Location\"\n//               />\n//               {errors.dcLocation && <span className=\"text-danger\">{errors.dcLocation}</span>}\n//             </div>\n\n//             <div className=\"dc-form-group\">\n//               <label htmlFor=\"userID\">User ID</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"userID\"\n//                 value={values.userID}\n//                 onChange={handleInput}\n//                 required\n//                 placeholder=\"Enter User ID\"\n//               />\n//               {errors.userID && <span className=\"text-danger\">{errors.userID}</span>}\n//             </div>\n\n//             <div className=\"dc-form-group\">\n//               <label htmlFor=\"openDays\">Open Days</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"openDays\"\n//                 value={values.openDays}\n//                 onChange={handleInput}\n//                 placeholder=\"Enter Open Days\"\n//               />\n//             </div>\n\n//             <div className=\"dc-form-group\">\n//               <label htmlFor=\"openTimes\">Open Times</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"openTimes\"\n//                 value={values.openTimes}\n//                 onChange={handleInput}\n//                 placeholder=\"Enter Open Times\"\n//               />\n//             </div>\n\n//             <div className=\"dc-form-group\">\n//               <label htmlFor=\"noOfStaffMembers\">Number of Staff Members</label>\n//               <input\n//                 type=\"number\"\n//                 name=\"noOfStaffMembers\"\n//                 value={values.noOfStaffMembers}\n//                 onChange={handleInput}\n//                 placeholder=\"Enter Number of Staff Members\"\n//               />\n//             </div>\n\n//             <div className=\"dc-form-group\">\n//               <label htmlFor=\"amenitiesOffered\">Amenities Offered</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"amenitiesOffered\"\n//                 value={values.amenitiesOffered}\n//                 onChange={handleInput}\n//                 placeholder=\"Enter Amenities Offered\"\n//               />\n//             </div>\n\n//             <div className=\"dc-form-group\">\n//               <label htmlFor=\"safetyFeatures\">Safety Features</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"safetyFeatures\"\n//                 value={values.safetyFeatures}\n//                 onChange={handleInput}\n//                 placeholder=\"Enter Safety Features\"\n//               />\n//             </div>\n\n//             <button type=\"submit\" className=\"dc-regi-submit\">Register</button>\n//           </form>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default DaycareRegiForm;\n\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FaUserEdit, FaTrashAlt, FaPlusCircle } from 'react-icons/fa';\nimport './DaycareRegiForm.css';\n\nfunction DaycareRegiForm() {\n  const [values, setValues] = useState({\n    userID: '',\n    dcName: '',\n    dcLocation: '',\n    dcPhone: '',\n    dcEmail: '',\n    openDays: '',\n    openTimes: '',\n    noOfStaffMembers: '',\n    amenitiesOffered: '',\n    safetyFeatures: ''\n  });\n\n  const [updateValues, setUpdateValues] = useState({\n    userID: '',\n    dcName: '',\n    dcLocation: '',\n    dcPhone: '',\n    dcEmail: '',\n    openDays: '',\n    openTimes: '',\n    noOfStaffMembers: '',\n    amenitiesOffered: '',\n    safetyFeatures: ''\n  });\n\n  const [deleteUserID, setDeleteUserID] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const response = await fetch('http://localhost:8800/api/daycare/register', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(values)\n      });\n      const result = await response.json();\n      alert(response.ok ? 'Daycare registered successfully' : result.error || 'Registration failed');\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  const handleUpdate = async (event) => {\n    event.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:8800/api/daycare/update/${updateValues.userID}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(updateValues)\n      });\n      const result = await response.json();\n      alert(response.ok ? 'Daycare updated successfully' : result.error || 'Update failed');\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  const handleDelete = async (event) => {\n    event.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:8800/api/daycare/delete/${deleteUserID}`, {\n        method: 'DELETE'\n      });\n      const result = await response.json();\n      alert(response.ok ? 'Daycare deleted successfully' : result.error || 'Deletion failed');\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <div className=\"daycare-management\">\n      <h1 className=\"daycare-management-title\">Daycare Management</h1>\n      \n      <div className=\"form-section\">\n        <h2 className=\"form-section-title\"><FaPlusCircle /> Register Daycare</h2>\n        <form onSubmit={handleSubmit}>\n          {Object.keys(values).map((key) => (\n            <input className=\"form-input\" key={key} type=\"text\" placeholder={key.replace(/([A-Z])/g, ' $1').trim()} onChange={(e) => setValues({...values, [key]: e.target.value})} required />\n          ))}\n          <button className=\"form-button\" type=\"submit\">Register</button>\n        </form>\n      </div>\n\n      <div className=\"form-section\">\n        <h2 className=\"form-section-title\"><FaUserEdit /> Update Daycare</h2>\n        <form onSubmit={handleUpdate}>\n          {Object.keys(updateValues).map((key) => (\n            <input className=\"form-input\" key={key} type=\"text\" placeholder={key.replace(/([A-Z])/g, ' $1').trim()} onChange={(e) => setUpdateValues({...updateValues, [key]: e.target.value})} required />\n          ))}\n          <button className=\"form-button\" type=\"submit\">Update</button>\n        </form>\n      </div>\n\n      <div className=\"form-section\">\n        <h2 className=\"form-section-title\"><FaTrashAlt /> Delete Daycare</h2>\n        <form onSubmit={handleDelete}>\n          <input className=\"form-input\" type=\"text\" placeholder=\"User ID\" onChange={(e) => setDeleteUserID(e.target.value)} required />\n          <button className=\"form-button\" type=\"submit\">Delete</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default DaycareRegiForm;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,UAAU,EAAEC,UAAU,EAAEC,YAAY,QAAQ,gBAAgB;AACrE,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC;IACnCW,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE,EAAE;IACVC,UAAU,EAAE,EAAE;IACdC,OAAO,EAAE,EAAE;IACXC,OAAO,EAAE,EAAE;IACXC,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,EAAE;IACbC,gBAAgB,EAAE,EAAE;IACpBC,gBAAgB,EAAE,EAAE;IACpBC,cAAc,EAAE;EAClB,CAAC,CAAC;EAEF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGtB,QAAQ,CAAC;IAC/CW,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE,EAAE;IACVC,UAAU,EAAE,EAAE;IACdC,OAAO,EAAE,EAAE;IACXC,OAAO,EAAE,EAAE;IACXC,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,EAAE;IACbC,gBAAgB,EAAE,EAAE;IACpBC,gBAAgB,EAAE,EAAE;IACpBC,cAAc,EAAE;EAClB,CAAC,CAAC;EAEF,MAAM,CAACG,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMyB,QAAQ,GAAGxB,WAAW,CAAC,CAAC;EAE9B,MAAMyB,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,EAAE;QACzEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC1B,MAAM;MAC7B,CAAC,CAAC;MACF,MAAM2B,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MACpCC,KAAK,CAACT,QAAQ,CAACU,EAAE,GAAG,iCAAiC,GAAGH,MAAM,CAACI,KAAK,IAAI,qBAAqB,CAAC;IAChG,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;EAED,MAAME,YAAY,GAAG,MAAOf,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,4CAA2CT,YAAY,CAACV,MAAO,EAAC,EAAE;QAC9FoB,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACd,YAAY;MACnC,CAAC,CAAC;MACF,MAAMe,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MACpCC,KAAK,CAACT,QAAQ,CAACU,EAAE,GAAG,8BAA8B,GAAGH,MAAM,CAACI,KAAK,IAAI,eAAe,CAAC;IACvF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;EAED,MAAMG,YAAY,GAAG,MAAOhB,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,4CAA2CP,YAAa,EAAC,EAAE;QACvFQ,MAAM,EAAE;MACV,CAAC,CAAC;MACF,MAAMK,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MACpCC,KAAK,CAACT,QAAQ,CAACU,EAAE,GAAG,8BAA8B,GAAGH,MAAM,CAACI,KAAK,IAAI,iBAAiB,CAAC;IACzF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;EAED,oBACElC,OAAA;IAAKsC,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCvC,OAAA;MAAIsC,SAAS,EAAC,0BAA0B;MAAAC,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEhE3C,OAAA;MAAKsC,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BvC,OAAA;QAAIsC,SAAS,EAAC,oBAAoB;QAAAC,QAAA,gBAACvC,OAAA,CAACF,YAAY;UAAA0C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,qBAAiB;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzE3C,OAAA;QAAM4C,QAAQ,EAAExB,YAAa;QAAAmB,QAAA,GAC1BM,MAAM,CAACC,IAAI,CAAC3C,MAAM,CAAC,CAAC4C,GAAG,CAAEC,GAAG,iBAC3BhD,OAAA;UAAOsC,SAAS,EAAC,YAAY;UAAWW,IAAI,EAAC,MAAM;UAACC,WAAW,EAAEF,GAAG,CAACG,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,CAACC,IAAI,CAAC,CAAE;UAACC,QAAQ,EAAGC,CAAC,IAAKlD,SAAS,CAAC;YAAC,GAAGD,MAAM;YAAE,CAAC6C,GAAG,GAAGM,CAAC,CAACC,MAAM,CAACC;UAAK,CAAC,CAAE;UAACC,QAAQ;QAAA,GAA7IT,GAAG;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA4I,CACnL,CAAC,eACF3C,OAAA;UAAQsC,SAAS,EAAC,aAAa;UAACW,IAAI,EAAC,QAAQ;UAAAV,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAEN3C,OAAA;MAAKsC,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BvC,OAAA;QAAIsC,SAAS,EAAC,oBAAoB;QAAAC,QAAA,gBAACvC,OAAA,CAACJ,UAAU;UAAA4C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,mBAAe;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrE3C,OAAA;QAAM4C,QAAQ,EAAER,YAAa;QAAAG,QAAA,GAC1BM,MAAM,CAACC,IAAI,CAAC/B,YAAY,CAAC,CAACgC,GAAG,CAAEC,GAAG,iBACjChD,OAAA;UAAOsC,SAAS,EAAC,YAAY;UAAWW,IAAI,EAAC,MAAM;UAACC,WAAW,EAAEF,GAAG,CAACG,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,CAACC,IAAI,CAAC,CAAE;UAACC,QAAQ,EAAGC,CAAC,IAAKtC,eAAe,CAAC;YAAC,GAAGD,YAAY;YAAE,CAACiC,GAAG,GAAGM,CAAC,CAACC,MAAM,CAACC;UAAK,CAAC,CAAE;UAACC,QAAQ;QAAA,GAAzJT,GAAG;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAwJ,CAC/L,CAAC,eACF3C,OAAA;UAAQsC,SAAS,EAAC,aAAa;UAACW,IAAI,EAAC,QAAQ;UAAAV,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAEN3C,OAAA;MAAKsC,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BvC,OAAA;QAAIsC,SAAS,EAAC,oBAAoB;QAAAC,QAAA,gBAACvC,OAAA,CAACH,UAAU;UAAA2C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,mBAAe;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrE3C,OAAA;QAAM4C,QAAQ,EAAEP,YAAa;QAAAE,QAAA,gBAC3BvC,OAAA;UAAOsC,SAAS,EAAC,YAAY;UAACW,IAAI,EAAC,MAAM;UAACC,WAAW,EAAC,SAAS;UAACG,QAAQ,EAAGC,CAAC,IAAKpC,eAAe,CAACoC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;UAACC,QAAQ;QAAA;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7H3C,OAAA;UAAQsC,SAAS,EAAC,aAAa;UAACW,IAAI,EAAC,QAAQ;UAAAV,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACzC,EAAA,CA1GQD,eAAe;EAAA,QA4BLN,WAAW;AAAA;AAAA+D,EAAA,GA5BrBzD,eAAe;AA4GxB,eAAeA,eAAe;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}