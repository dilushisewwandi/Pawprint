{"ast":null,"code":"var _jsxFileName = \"G:\\\\My 2025\\\\Study\\\\Pawprint-Dogcare-main\\\\Pawprint-Dogcare-main\\\\Client\\\\src\\\\Components\\\\VetRegiForm.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import './VetRegiForm.css'; \n\n// function VetRegiForm() {\n//   const [values, setValues] = useState({\n//     vetName: '',\n//     vetEmail: '',\n//     vetSpecialization: '',\n//     vetPhone: '',\n//     clinic: '',\n//     userID: ''\n//   });\n\n//   const [errors, setErrors] = useState({});\n//   const navigate = useNavigate(); \n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     const validationErrors = validateInputs(values);\n//     setErrors(validationErrors);\n\n//     if (Object.keys(validationErrors).length === 0) {\n//       try {\n//         const response = await fetch('http://localhost:8800/api/vet/register', {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json'\n//           },\n//           body: JSON.stringify(values)\n//         });\n\n//         if (response.ok) {\n//           alert('Veterinarian registered successfully');\n\n//         } else {\n//           console.error('Error storing data:', response.statusText);\n//         }\n//       } catch (error) {\n//         console.error('Error:', error);\n//       }\n//     }\n//   };\n\n//   const handleInput = (event) => {\n//     const { name, value } = event.target;\n//     setValues(prev => ({ ...prev, [name]: value }));\n//   };\n\n//   const validateInputs = (values) => {\n//     let errors = {};\n//     if (!values.vetName) errors.vetName = 'Veterinarian Name is required';\n//     if (!values.vetEmail) errors.vetEmail = 'Veterinarian Email is required';\n//     if (!values.vetSpecialization) errors.vetSpecialization = 'Specialization is required';\n//     if (!values.vetPhone) errors.vetPhone = 'Veterinarian Phone is required';\n//     if (!values.clinic) errors.clinic = 'Clinic Name is required';\n//     if (!values.userID) errors.userID = 'User ID is required';\n//     return errors;\n//   };\n\n//   const backgroundStyle = {\n//     backgroundImage: \"url('/images/login1.jpg')\",\n//     backgroundSize: 'cover',\n//     backgroundPosition: 'center',\n//     minHeight: '100vh',\n//     display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'center'\n//   };\n\n//   return (\n//     <div className=\"form-container\" style={backgroundStyle}>\n//       <div className=\"registration-content\">\n//         <h1 className=\"welcome-message\">Join Our Veterinary Network</h1>\n//         <div className=\"registration-card\">\n//           <div className=\"registration-card-body\">\n//             <h2 className=\"regi-form-name\">Veterinarian Registration</h2>\n//             <form onSubmit={handleSubmit}>\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"vetName\">Vet Name</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"vetName\"\n//                   value={values.vetName}\n//                   onChange={handleInput}\n//                   required\n//                   placeholder=\"Enter Veterinarian Name\"\n//                 />\n//                 {errors.vetName && <span className=\"text-danger\">{errors.vetName}</span>}\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"vetEmail\">Vet Email</label>\n//                 <input\n//                   type=\"email\"\n//                   name=\"vetEmail\"\n//                   value={values.vetEmail}\n//                   onChange={handleInput}\n//                   required\n//                   placeholder=\"Enter Veterinarian Email\"\n//                 />\n//                 {errors.vetEmail && <span className=\"text-danger\">{errors.vetEmail}</span>}\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"vetSpecialization\">Specialization</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"vetSpecialization\"\n//                   value={values.vetSpecialization}\n//                   onChange={handleInput}\n//                   required\n//                   placeholder=\"Enter Specialization\"\n//                 />\n//                 {errors.vetSpecialization && <span className=\"text-danger\">{errors.vetSpecialization}</span>}\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"vetPhone\">Vet Phone</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"vetPhone\"\n//                   value={values.vetPhone}\n//                   onChange={handleInput}\n//                   required\n//                   placeholder=\"Enter Phone\"\n//                 />\n//                 {errors.vetPhone && <span className=\"text-danger\">{errors.vetPhone}</span>}\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"clinic\">Vet Clinic</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"clinic\"\n//                   value={values.clinic}\n//                   onChange={handleInput}\n//                   required\n//                   placeholder=\"Enter Clinic\"\n//                 />\n//                 {errors.clinic && <span className=\"text-danger\">{errors.clinic}</span>}\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"userID\">User ID</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"userID\"\n//                   value={values.userID}\n//                   onChange={handleInput}\n//                   required\n//                   placeholder=\"Enter User ID\"\n//                 />\n//                 {errors.userID && <span className=\"text-danger\">{errors.userID}</span>}\n//               </div>\n\n//               <button type=\"submit\" className='vet-regi-submit'>Register</button>\n//             </form>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default VetRegiForm;\n\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import './VetRegiForm.css'; \n\n// function VetRegiForm() {\n//   const [values, setValues] = useState({\n//     vetName: '',\n//     vetEmail: '',\n//     vetSpecialization: '',\n//     vetPhone: '',\n//     clinic: '',\n//     userID: ''\n//   });\n\n//   const [errors, setErrors] = useState({});\n//   const [serverError, setServerError] = useState(''); // State for server error messages\n//   const navigate = useNavigate(); \n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     const validationErrors = validateInputs(values);\n//     setErrors(validationErrors);\n\n//     if (Object.keys(validationErrors).length === 0) {\n//       try {\n//         const response = await fetch('http://localhost:8800/api/vet/register', {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json'\n//           },\n//           body: JSON.stringify(values)\n//         });\n\n//         if (response.ok) {\n//           alert('Veterinarian registered successfully');\n//           setServerError(''); // Clear any previous server errors\n//         } else {\n//           const errorData = await response.json();\n//           setServerError(errorData.error || 'Error registering veterinarian');\n//         }\n//       } catch (error) {\n//         setServerError('Failed to connect to the server. Please try again.');\n//         console.error('Error:', error);\n//       }\n//     }\n//   };\n\n//   const handleInput = (event) => {\n//     const { name, value } = event.target;\n//     setValues(prev => ({ ...prev, [name]: value }));\n//   };\n\n//   const validateInputs = (values) => {\n//     let errors = {};\n//     if (!values.vetName) errors.vetName = 'Veterinarian Name is required';\n//     if (!values.vetEmail) errors.vetEmail = 'Veterinarian Email is required';\n//     if (!values.vetSpecialization) errors.vetSpecialization = 'Specialization is required';\n//     if (!values.vetPhone) errors.vetPhone = 'Veterinarian Phone is required';\n//     if (!values.clinic) errors.clinic = 'Clinic Name is required';\n//     if (!values.userID) errors.userID = 'User ID is required';\n//     return errors;\n//   };\n\n//   const backgroundStyle = {\n//     backgroundImage: \"url('/images/login1.jpg')\",\n//     backgroundSize: 'cover',\n//     backgroundPosition: 'center',\n//     minHeight: '100vh',\n//     display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'center'\n//   };\n\n//   return (\n//     <div className=\"form-container\" style={backgroundStyle}>\n//       <div className=\"registration-content\">\n//         <h1 className=\"welcome-message\">Join Our Veterinary Network</h1>\n//         <div className=\"registration-card\">\n//           <div className=\"registration-card-body\">\n//             <h2 className=\"regi-form-name\">Veterinarian Registration</h2>\n//             <form onSubmit={handleSubmit}>\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"vetName\">Vet Name</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"vetName\"\n//                   value={values.vetName}\n//                   onChange={handleInput}\n//                   required\n//                   placeholder=\"Enter Veterinarian Name\"\n//                 />\n//                 {errors.vetName && <span className=\"text-danger\">{errors.vetName}</span>}\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"vetEmail\">Vet Email</label>\n//                 <input\n//                   type=\"email\"\n//                   name=\"vetEmail\"\n//                   value={values.vetEmail}\n//                   onChange={handleInput}\n//                   required\n//                   placeholder=\"Enter Veterinarian Email\"\n//                 />\n//                 {errors.vetEmail && <span className=\"text-danger\">{errors.vetEmail}</span>}\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"vetSpecialization\">Specialization</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"vetSpecialization\"\n//                   value={values.vetSpecialization}\n//                   onChange={handleInput}\n//                   required\n//                   placeholder=\"Enter Specialization\"\n//                 />\n//                 {errors.vetSpecialization && <span className=\"text-danger\">{errors.vetSpecialization}</span>}\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"vetPhone\">Vet Phone</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"vetPhone\"\n//                   value={values.vetPhone}\n//                   onChange={handleInput}\n//                   required\n//                   placeholder=\"Enter Phone\"\n//                 />\n//                 {errors.vetPhone && <span className=\"text-danger\">{errors.vetPhone}</span>}\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"clinic\">Vet Clinic</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"clinic\"\n//                   value={values.clinic}\n//                   onChange={handleInput}\n//                   required\n//                   placeholder=\"Enter Clinic\"\n//                 />\n//                 {errors.clinic && <span className=\"text-danger\">{errors.clinic}</span>}\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"userID\">User ID</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"userID\"\n//                   value={values.userID}\n//                   onChange={handleInput}\n//                   required\n//                   placeholder=\"Enter User ID\"\n//                 />\n//                 {errors.userID && <span className=\"text-danger\">{errors.userID}</span>}\n//               </div>\n\n//               {serverError && <div className=\"text-danger\">{serverError}</div>} {/* Display server error here */}\n\n//               <button type=\"submit\" className='vet-regi-submit'>Register</button>\n//             </form>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default VetRegiForm;\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FaUserEdit, FaTrashAlt, FaPlusCircle } from 'react-icons/fa';\nimport './VetRegiForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VetRegiForm() {\n  _s();\n  const [values, setValues] = useState({\n    userID: '',\n    vetName: '',\n    vetSpecialization: '',\n    vetPhone: '',\n    vetEmail: '',\n    clinic: ''\n  });\n  const [updateValues, setUpdateValues] = useState({\n    userID: '',\n    vetName: '',\n    vetSpecialization: '',\n    vetPhone: '',\n    vetEmail: '',\n    clinic: ''\n  });\n  const [deleteUserID, setDeleteUserID] = useState('');\n  const [deleteEmail, setDeleteEmail] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch('http://localhost:8800/api/vet/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(values)\n      });\n      const result = await response.json();\n      if (response.ok) {\n        alert(result.message || 'Veterinarian registered successfully');\n        window.location.href = '/vet'; // Redirect after successful registration\n      } else {\n        alert(result.error || 'Error registering veterinarian');\n        navigate('/signup');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const handleUpdate = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:8800/api/vet/update/${updateValues.userID}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updateValues)\n      });\n      const result = await response.json();\n      alert(response.ok ? 'Veterinarian updated successfully' : result.error || 'Failed to update veterinarian');\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const handleDelete = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:8800/api/vet/delete/${deleteUserID}`, {\n        method: 'DELETE'\n      });\n      const result = await response.json();\n      alert(response.ok ? 'Veterinarian deleted successfully' : result.error || 'Failed to delete veterinarian');\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vet-management\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"vet-management-title\",\n      children: \"Veterinarian Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"form-section-title\",\n        children: [/*#__PURE__*/_jsxDEV(FaPlusCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 44\n        }, this), \" Register Veterinarian\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-input\",\n          type: \"text\",\n          placeholder: \"User ID\",\n          onChange: e => setValues({\n            ...values,\n            userID: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-input\",\n          type: \"text\",\n          placeholder: \"Name\",\n          onChange: e => setValues({\n            ...values,\n            vetName: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-input\",\n          type: \"text\",\n          placeholder: \"Specialization\",\n          onChange: e => setValues({\n            ...values,\n            vetSpecialization: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-input\",\n          type: \"text\",\n          placeholder: \"Phone\",\n          onChange: e => setValues({\n            ...values,\n            vetPhone: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-input\",\n          type: \"email\",\n          placeholder: \"Email\",\n          onChange: e => setValues({\n            ...values,\n            vetEmail: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-input\",\n          type: \"text\",\n          placeholder: \"Clinic\",\n          onChange: e => setValues({\n            ...values,\n            clinic: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"form-button\",\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"form-section-title\",\n        children: [/*#__PURE__*/_jsxDEV(FaUserEdit, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 44\n        }, this), \" Update Veterinarian\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleUpdate,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-input\",\n          type: \"text\",\n          placeholder: \"User ID\",\n          onChange: e => setUpdateValues({\n            ...updateValues,\n            userID: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-input\",\n          type: \"text\",\n          placeholder: \"New Name\",\n          onChange: e => setUpdateValues({\n            ...updateValues,\n            vetName: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-input\",\n          type: \"text\",\n          placeholder: \"New Specialization\",\n          onChange: e => setUpdateValues({\n            ...updateValues,\n            vetSpecialization: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-input\",\n          type: \"text\",\n          placeholder: \"New Phone\",\n          onChange: e => setUpdateValues({\n            ...updateValues,\n            vetPhone: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-input\",\n          type: \"email\",\n          placeholder: \"New Email\",\n          onChange: e => setUpdateValues({\n            ...updateValues,\n            vetEmail: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-input\",\n          type: \"text\",\n          placeholder: \"New Clinic\",\n          onChange: e => setUpdateValues({\n            ...updateValues,\n            clinic: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"form-button\",\n          type: \"submit\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"form-section-title\",\n        children: [/*#__PURE__*/_jsxDEV(FaTrashAlt, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 44\n        }, this), \" Delete Veterinarian\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleDelete,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-input\",\n          type: \"text\",\n          placeholder: \"User ID\",\n          onChange: e => setDeleteUserID(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-input\",\n          type: \"email\",\n          placeholder: \"Email\",\n          onChange: e => setDeleteEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"form-button\",\n          type: \"submit\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 421,\n    columnNumber: 5\n  }, this);\n}\n_s(VetRegiForm, \"XLubJk5n2wIkunUbf8GZCcLv6Rk=\", false, function () {\n  return [useNavigate];\n});\n_c = VetRegiForm;\nexport default VetRegiForm;\nvar _c;\n$RefreshReg$(_c, \"VetRegiForm\");","map":{"version":3,"names":["React","useState","useNavigate","FaUserEdit","FaTrashAlt","FaPlusCircle","jsxDEV","_jsxDEV","VetRegiForm","_s","values","setValues","userID","vetName","vetSpecialization","vetPhone","vetEmail","clinic","updateValues","setUpdateValues","deleteUserID","setDeleteUserID","deleteEmail","setDeleteEmail","navigate","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","json","ok","alert","message","window","location","href","error","console","handleUpdate","handleDelete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","e","target","value","required","_c","$RefreshReg$"],"sources":["G:/My 2025/Study/Pawprint-Dogcare-main/Pawprint-Dogcare-main/Client/src/Components/VetRegiForm.jsx"],"sourcesContent":["// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import './VetRegiForm.css'; \n\n// function VetRegiForm() {\n//   const [values, setValues] = useState({\n//     vetName: '',\n//     vetEmail: '',\n//     vetSpecialization: '',\n//     vetPhone: '',\n//     clinic: '',\n//     userID: ''\n//   });\n\n//   const [errors, setErrors] = useState({});\n//   const navigate = useNavigate(); \n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     const validationErrors = validateInputs(values);\n//     setErrors(validationErrors);\n\n//     if (Object.keys(validationErrors).length === 0) {\n//       try {\n//         const response = await fetch('http://localhost:8800/api/vet/register', {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json'\n//           },\n//           body: JSON.stringify(values)\n//         });\n\n//         if (response.ok) {\n//           alert('Veterinarian registered successfully');\n         \n//         } else {\n//           console.error('Error storing data:', response.statusText);\n//         }\n//       } catch (error) {\n//         console.error('Error:', error);\n//       }\n//     }\n//   };\n\n//   const handleInput = (event) => {\n//     const { name, value } = event.target;\n//     setValues(prev => ({ ...prev, [name]: value }));\n//   };\n\n//   const validateInputs = (values) => {\n//     let errors = {};\n//     if (!values.vetName) errors.vetName = 'Veterinarian Name is required';\n//     if (!values.vetEmail) errors.vetEmail = 'Veterinarian Email is required';\n//     if (!values.vetSpecialization) errors.vetSpecialization = 'Specialization is required';\n//     if (!values.vetPhone) errors.vetPhone = 'Veterinarian Phone is required';\n//     if (!values.clinic) errors.clinic = 'Clinic Name is required';\n//     if (!values.userID) errors.userID = 'User ID is required';\n//     return errors;\n//   };\n\n//   const backgroundStyle = {\n//     backgroundImage: \"url('/images/login1.jpg')\",\n//     backgroundSize: 'cover',\n//     backgroundPosition: 'center',\n//     minHeight: '100vh',\n//     display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'center'\n//   };\n\n//   return (\n//     <div className=\"form-container\" style={backgroundStyle}>\n//       <div className=\"registration-content\">\n//         <h1 className=\"welcome-message\">Join Our Veterinary Network</h1>\n//         <div className=\"registration-card\">\n//           <div className=\"registration-card-body\">\n//             <h2 className=\"regi-form-name\">Veterinarian Registration</h2>\n//             <form onSubmit={handleSubmit}>\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"vetName\">Vet Name</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"vetName\"\n//                   value={values.vetName}\n//                   onChange={handleInput}\n//                   required\n//                   placeholder=\"Enter Veterinarian Name\"\n//                 />\n//                 {errors.vetName && <span className=\"text-danger\">{errors.vetName}</span>}\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"vetEmail\">Vet Email</label>\n//                 <input\n//                   type=\"email\"\n//                   name=\"vetEmail\"\n//                   value={values.vetEmail}\n//                   onChange={handleInput}\n//                   required\n//                   placeholder=\"Enter Veterinarian Email\"\n//                 />\n//                 {errors.vetEmail && <span className=\"text-danger\">{errors.vetEmail}</span>}\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"vetSpecialization\">Specialization</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"vetSpecialization\"\n//                   value={values.vetSpecialization}\n//                   onChange={handleInput}\n//                   required\n//                   placeholder=\"Enter Specialization\"\n//                 />\n//                 {errors.vetSpecialization && <span className=\"text-danger\">{errors.vetSpecialization}</span>}\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"vetPhone\">Vet Phone</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"vetPhone\"\n//                   value={values.vetPhone}\n//                   onChange={handleInput}\n//                   required\n//                   placeholder=\"Enter Phone\"\n//                 />\n//                 {errors.vetPhone && <span className=\"text-danger\">{errors.vetPhone}</span>}\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"clinic\">Vet Clinic</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"clinic\"\n//                   value={values.clinic}\n//                   onChange={handleInput}\n//                   required\n//                   placeholder=\"Enter Clinic\"\n//                 />\n//                 {errors.clinic && <span className=\"text-danger\">{errors.clinic}</span>}\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"userID\">User ID</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"userID\"\n//                   value={values.userID}\n//                   onChange={handleInput}\n//                   required\n//                   placeholder=\"Enter User ID\"\n//                 />\n//                 {errors.userID && <span className=\"text-danger\">{errors.userID}</span>}\n//               </div>\n\n//               <button type=\"submit\" className='vet-regi-submit'>Register</button>\n//             </form>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default VetRegiForm;\n\n\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import './VetRegiForm.css'; \n\n// function VetRegiForm() {\n//   const [values, setValues] = useState({\n//     vetName: '',\n//     vetEmail: '',\n//     vetSpecialization: '',\n//     vetPhone: '',\n//     clinic: '',\n//     userID: ''\n//   });\n\n//   const [errors, setErrors] = useState({});\n//   const [serverError, setServerError] = useState(''); // State for server error messages\n//   const navigate = useNavigate(); \n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     const validationErrors = validateInputs(values);\n//     setErrors(validationErrors);\n\n//     if (Object.keys(validationErrors).length === 0) {\n//       try {\n//         const response = await fetch('http://localhost:8800/api/vet/register', {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json'\n//           },\n//           body: JSON.stringify(values)\n//         });\n\n//         if (response.ok) {\n//           alert('Veterinarian registered successfully');\n//           setServerError(''); // Clear any previous server errors\n//         } else {\n//           const errorData = await response.json();\n//           setServerError(errorData.error || 'Error registering veterinarian');\n//         }\n//       } catch (error) {\n//         setServerError('Failed to connect to the server. Please try again.');\n//         console.error('Error:', error);\n//       }\n//     }\n//   };\n\n//   const handleInput = (event) => {\n//     const { name, value } = event.target;\n//     setValues(prev => ({ ...prev, [name]: value }));\n//   };\n\n//   const validateInputs = (values) => {\n//     let errors = {};\n//     if (!values.vetName) errors.vetName = 'Veterinarian Name is required';\n//     if (!values.vetEmail) errors.vetEmail = 'Veterinarian Email is required';\n//     if (!values.vetSpecialization) errors.vetSpecialization = 'Specialization is required';\n//     if (!values.vetPhone) errors.vetPhone = 'Veterinarian Phone is required';\n//     if (!values.clinic) errors.clinic = 'Clinic Name is required';\n//     if (!values.userID) errors.userID = 'User ID is required';\n//     return errors;\n//   };\n\n//   const backgroundStyle = {\n//     backgroundImage: \"url('/images/login1.jpg')\",\n//     backgroundSize: 'cover',\n//     backgroundPosition: 'center',\n//     minHeight: '100vh',\n//     display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'center'\n//   };\n\n//   return (\n//     <div className=\"form-container\" style={backgroundStyle}>\n//       <div className=\"registration-content\">\n//         <h1 className=\"welcome-message\">Join Our Veterinary Network</h1>\n//         <div className=\"registration-card\">\n//           <div className=\"registration-card-body\">\n//             <h2 className=\"regi-form-name\">Veterinarian Registration</h2>\n//             <form onSubmit={handleSubmit}>\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"vetName\">Vet Name</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"vetName\"\n//                   value={values.vetName}\n//                   onChange={handleInput}\n//                   required\n//                   placeholder=\"Enter Veterinarian Name\"\n//                 />\n//                 {errors.vetName && <span className=\"text-danger\">{errors.vetName}</span>}\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"vetEmail\">Vet Email</label>\n//                 <input\n//                   type=\"email\"\n//                   name=\"vetEmail\"\n//                   value={values.vetEmail}\n//                   onChange={handleInput}\n//                   required\n//                   placeholder=\"Enter Veterinarian Email\"\n//                 />\n//                 {errors.vetEmail && <span className=\"text-danger\">{errors.vetEmail}</span>}\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"vetSpecialization\">Specialization</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"vetSpecialization\"\n//                   value={values.vetSpecialization}\n//                   onChange={handleInput}\n//                   required\n//                   placeholder=\"Enter Specialization\"\n//                 />\n//                 {errors.vetSpecialization && <span className=\"text-danger\">{errors.vetSpecialization}</span>}\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"vetPhone\">Vet Phone</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"vetPhone\"\n//                   value={values.vetPhone}\n//                   onChange={handleInput}\n//                   required\n//                   placeholder=\"Enter Phone\"\n//                 />\n//                 {errors.vetPhone && <span className=\"text-danger\">{errors.vetPhone}</span>}\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"clinic\">Vet Clinic</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"clinic\"\n//                   value={values.clinic}\n//                   onChange={handleInput}\n//                   required\n//                   placeholder=\"Enter Clinic\"\n//                 />\n//                 {errors.clinic && <span className=\"text-danger\">{errors.clinic}</span>}\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"userID\">User ID</label>\n//                 <input\n//                   type=\"text\"\n//                   name=\"userID\"\n//                   value={values.userID}\n//                   onChange={handleInput}\n//                   required\n//                   placeholder=\"Enter User ID\"\n//                 />\n//                 {errors.userID && <span className=\"text-danger\">{errors.userID}</span>}\n//               </div>\n\n//               {serverError && <div className=\"text-danger\">{serverError}</div>} {/* Display server error here */}\n\n//               <button type=\"submit\" className='vet-regi-submit'>Register</button>\n//             </form>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default VetRegiForm;\n\n\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FaUserEdit, FaTrashAlt, FaPlusCircle } from 'react-icons/fa';\nimport './VetRegiForm.css';\n\nfunction VetRegiForm() {\n  const [values, setValues] = useState({\n    userID: '',\n    vetName: '',\n    vetSpecialization: '',\n    vetPhone: '',\n    vetEmail: '',\n    clinic: ''\n  });\n\n  const [updateValues, setUpdateValues] = useState({\n    userID: '',\n    vetName: '',\n    vetSpecialization: '',\n    vetPhone: '',\n    vetEmail: '',\n    clinic: ''\n  });\n\n  const [deleteUserID, setDeleteUserID] = useState('');\n  const [deleteEmail, setDeleteEmail] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const response = await fetch('http://localhost:8800/api/vet/register', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(values)\n      });\n      const result = await response.json();\n      if (response.ok) {\n        alert(result.message || 'Veterinarian registered successfully');\n        window.location.href = '/vet'; // Redirect after successful registration\n      } else {\n        alert(result.error || 'Error registering veterinarian');\n        navigate('/signup');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  const handleUpdate = async (event) => {\n    event.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:8800/api/vet/update/${updateValues.userID}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(updateValues)\n      });\n      const result = await response.json();\n      alert(response.ok ? 'Veterinarian updated successfully' : result.error || 'Failed to update veterinarian');\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  const handleDelete = async (event) => {\n    event.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:8800/api/vet/delete/${deleteUserID}`, {\n        method: 'DELETE'\n      });\n      const result = await response.json();\n      alert(response.ok ? 'Veterinarian deleted successfully' : result.error || 'Failed to delete veterinarian');\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <div className=\"vet-management\">\n      <h1 className=\"vet-management-title\">Veterinarian Management</h1>\n\n      {/* Register Vet */}\n      <div className=\"form-section\">\n        <h2 className=\"form-section-title\"><FaPlusCircle /> Register Veterinarian</h2>\n        <form onSubmit={handleSubmit}>\n          <input className=\"form-input\" type=\"text\" placeholder=\"User ID\" onChange={(e) => setValues({...values, userID: e.target.value})} required />\n          <input className=\"form-input\" type=\"text\" placeholder=\"Name\" onChange={(e) => setValues({...values, vetName: e.target.value})} required />\n          <input className=\"form-input\" type=\"text\" placeholder=\"Specialization\" onChange={(e) => setValues({...values, vetSpecialization: e.target.value})} required />\n          <input className=\"form-input\" type=\"text\" placeholder=\"Phone\" onChange={(e) => setValues({...values, vetPhone: e.target.value})} required />\n          <input className=\"form-input\" type=\"email\" placeholder=\"Email\" onChange={(e) => setValues({...values, vetEmail: e.target.value})} required />\n          <input className=\"form-input\" type=\"text\" placeholder=\"Clinic\" onChange={(e) => setValues({...values, clinic: e.target.value})} required />\n          <button className=\"form-button\" type=\"submit\">Register</button>\n        </form>\n      </div>\n\n      {/* Update Vet */}\n      <div className=\"form-section\">\n        <h2 className=\"form-section-title\"><FaUserEdit /> Update Veterinarian</h2>\n        <form onSubmit={handleUpdate}>\n          <input className=\"form-input\" type=\"text\" placeholder=\"User ID\" onChange={(e) => setUpdateValues({...updateValues, userID: e.target.value})} required />\n          <input className=\"form-input\" type=\"text\" placeholder=\"New Name\" onChange={(e) => setUpdateValues({...updateValues, vetName: e.target.value})} />\n          <input className=\"form-input\" type=\"text\" placeholder=\"New Specialization\" onChange={(e) => setUpdateValues({...updateValues, vetSpecialization: e.target.value})} />\n          <input className=\"form-input\" type=\"text\" placeholder=\"New Phone\" onChange={(e) => setUpdateValues({...updateValues, vetPhone: e.target.value})} />\n          <input className=\"form-input\" type=\"email\" placeholder=\"New Email\" onChange={(e) => setUpdateValues({...updateValues, vetEmail: e.target.value})} />\n          <input className=\"form-input\" type=\"text\" placeholder=\"New Clinic\" onChange={(e) => setUpdateValues({...updateValues, clinic: e.target.value})} />\n          <button className=\"form-button\" type=\"submit\">Update</button>\n        </form>\n      </div>\n\n      {/* Delete Vet */}\n      <div className=\"form-section\">\n        <h2 className=\"form-section-title\"><FaTrashAlt /> Delete Veterinarian</h2>\n        <form onSubmit={handleDelete}>\n          <input className=\"form-input\" type=\"text\" placeholder=\"User ID\" onChange={(e) => setDeleteUserID(e.target.value)} required />\n          <input className=\"form-input\" type=\"email\" placeholder=\"Email\" onChange={(e) => setDeleteEmail(e.target.value)} required />\n          <button className=\"form-button\" type=\"submit\">Delete</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default VetRegiForm;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}