{"ast":null,"code":"var _jsxFileName = \"G:\\\\My 2025\\\\Study\\\\Pawprint-Dogcare-main\\\\Pawprint-Dogcare-main\\\\Client\\\\src\\\\Components\\\\AdopterRegiForm.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import './AdopterRegiForm.css';\n\n// function AdopterRegiForm() {\n//   const [values, setValues] = useState({\n//     userID: '',\n//     adoName: '',\n//     adoNIC: '',\n//     adoAge: '',\n//     adoJob: '',\n//     adoGender: '',\n//     adoLocation: '',\n//     adoEmail: '',\n//     adoPhone: '',\n//     houseHoldComposition: '',\n//     reasonForAdoption: ''\n//   });\n\n//   const [errors, setErrors] = useState({});\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     const validationErrors = validateInputs(values);\n//     setErrors(validationErrors);\n\n//     if (Object.keys(validationErrors).length === 0) {\n//       try {\n//         const response = await fetch('http://localhost:8800/api/adopterRegi/register', {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json'\n//           },\n//           body: JSON.stringify(values)\n//         });\n//         if (response.ok) {\n//           alert('Adopter registered successfully');\n//           // window.location.href = '/services';\n//         } else {\n//           console.error('Error storing data:', response.statusText);\n//         }\n//       } catch (error) {\n//         console.error('Error:', error);\n//       }\n//     }\n//   };\n\n//   const handleInput = (event) => {\n//     const { name, value } = event.target;\n//     setValues(prev => ({ ...prev, [name]: value }));\n//   };\n\n//   const validateInputs = (values) => {\n//     let errors = {};\n//     if (!values.userID) errors.userID = 'User ID is required';\n//     if (!values.adoName) errors.adoName = 'Adopter Name is required';\n//     if (!values.adoNIC) errors.adoNIC = 'Adopter NIC is required';\n//     if (!values.adoAge) errors.adoAge = 'Adopter Age is required';\n//     if (!values.adoJob) errors.adoJob = 'Adopter Job is required';\n//     if (!values.adoGender) errors.adoGender = 'Adopter Gender is required';\n//     if (!values.adoLocation) errors.adoLocation = 'Adopter Location is required';\n//     if (!values.adoEmail) errors.adoEmail = 'Adopter Email is required';\n//     if (!values.adoPhone) errors.adoPhone = 'Adopter Phone is required';\n//     if (!values.houseHoldComposition) errors.houseHoldComposition = 'Household Composition is required';\n//     if (!values.reasonForAdoption) errors.reasonForAdoption = 'Reason for Adoption is required';\n//     return errors;\n//   };\n\n//   const backgroundStyle = {\n//     backgroundImage: \"url('/images/login1.jpg')\",\n//     backgroundSize: 'cover',\n//     backgroundPosition: 'center',\n//     minHeight: '100vh',\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//     justifyContent: 'center'\n//   };\n\n//   return (\n//     <div className=\"form-container\" style={backgroundStyle}>\n//       <div className=\"ado-regi-card\">\n//         <div className=\"ado-regi-card-body\">\n//           <h2 className=\"ado-regi-form-name\">Adopter Registration</h2>\n//           <form onSubmit={handleSubmit}>\n//             {Object.keys(values).map(key => (\n//               <div className=\"form-group\" key={key}>\n//                 <label htmlFor={key}>{key.split(/(?=[A-Z])/).join(' ')}</label>\n//                 <input\n//                   type={key === 'adoEmail' ? 'email' : 'text'}\n//                   name={key}\n//                   value={values[key]}\n//                   onChange={handleInput}\n//                   required\n//                   placeholder={`Enter ${key.split(/(?=[A-Z])/).join(' ')}`}\n//                   className=\"form-control rounded\"\n//                 />\n//                 {errors[key] && <span className=\"text-danger\">{errors[key]}</span>}\n//               </div>\n//             ))}\n//             <button type=\"submit\">Register</button>\n//           </form>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default AdopterRegiForm;\n\n// import React, { useState } from 'react';\n// import './AdopterRegiForm.css';\n// import { useNavigate } from 'react-router-dom';\n\n// function AdopterRegiForm() {\n//   const [values, setValues] = useState({\n//     adoName: '',\n//     adoEmail: '',\n//     adoPhone: '',\n//     adoLocation: '',\n//     adoNIC:'',\n//     adoAge:'',\n//     adoJob:'',\n//     adoGender:'',\n//     userID: ''\n//   });\n\n//   const [errors, setErrors] = useState({});\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     const validationErrors = validateInputs(values);\n//     setErrors(validationErrors);\n\n//     if (Object.keys(validationErrors).length === 0) {\n//       try {\n//         const response = await fetch('http://localhost:8800/api/adopter/register', {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json'\n//           },\n//           body: JSON.stringify(values)\n//         });\n\n//         const result = await response.json();\n\n//         if (response.ok) {\n//           alert(result.message || 'Adopter registered successfully');\n//         //   window.location.href = '/pet/register';\n//         } else {\n//           alert(result.error || 'This user ID is wrong or already assigned. Please sign up.');\n//           navigate('/signup');\n//         }\n//       } catch (error) {\n//         console.error('Error:', error);\n//       }\n//     }\n//   };\n\n//   const handleInput = (event) => {\n//     const { name, value } = event.target;\n//     setValues((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   const validateInputs = (values) => {\n//     let errors = {};\n//     if (!values.adoName) errors.adoName = 'Adopter Name is required';\n//     if (!values.adoEmail) errors.adoEmail = 'Adopter Email is required';\n//     if (!values.adoPhone) errors.adoPhone = 'Adopter Phone is required';\n//     if (!values.adoLocation) errors.adoLocation = 'Adopter Location is required';\n//     if (!values.adoNIC) errors.adoNIC = 'Adopter NIC is required';\n//     if (!values.adoAge) errors.adoAge = 'Adopter Age is required';\n//     if (!values.adoGender) errors.adoGender = 'Adopter Gender is required';\n//     if (!values.adoJob) errors.adoJob= 'Adopter Job is required';\n//     if (!values.userID) errors.userID = 'User ID is required';\n//     return errors;\n//   };\n\n//   const backgroundStyle = {\n//     backgroundImage: \"url('/images/login1.jpg')\",\n//     backgroundSize: 'cover',\n//     backgroundPosition: 'center',\n//     minHeight: '100vh',\n//     display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'center'\n//   };\n\n//   return (\n//     <div className=\"ado-form-container\" style={backgroundStyle}>\n//        <h1 className=\"ado-welcome-message\">Join Our Network</h1>\n//   <div className=\"ado-registration-card\">\n\n//     <div className=\"ado-registration-card-body\">\n//       <h2 className=\"ado-regi-form-name\">Adopter Registration</h2>\n//       <form onSubmit={handleSubmit}>\n//         <div className=\"ado-form-group\">\n//           <label htmlFor=\"adoName\">Adopter Name</label>\n//           <input\n//             type=\"text\"\n//             name=\"adoName\"\n//             value={values.adoName}\n//             onChange={handleInput}\n//             required\n//             placeholder=\"Enter Adopter Name\"\n//           />\n//           {errors.adoName && <span className=\"text-danger\">{errors.adoName}</span>}\n//         </div>\n\n//         <div className=\"ado-form-group\">\n//           <label htmlFor=\"adoEmail\">Adopter Email</label>\n//           <input\n//             type=\"email\"\n//             name=\"adoEmail\"\n//             value={values.adoEmail}\n//             onChange={handleInput}\n//             required\n//             placeholder=\"Enter Distributor Email\"\n//           />\n//           {errors.adoEmail && <span className=\"text-danger\">{errors.adoEmail}</span>}\n//         </div>\n\n//         <div className=\"ado-form-group\">\n//           <label htmlFor=\"adoPhone\">Adopter Phone</label>\n//           <input\n//             type=\"text\"\n//             name=\"adoPhone\"\n//             value={values.adoPhone}\n//             onChange={handleInput}\n//             required\n//             placeholder=\"Enter Phone\"\n//           />\n//           {errors.adoPhone && <span className=\"text-danger\">{errors.adoPhone}</span>}\n//         </div>\n\n//         <div className=\"ado-form-group\">\n//           <label htmlFor=\"adoGender\">Adopter Gender</label>\n//           <input\n//             type=\"text\"\n//             name=\"adoGender\"\n//             value={values.adoGender}\n//             onChange={handleInput}\n//             required\n//             placeholder=\"Enter Gender\"\n//           />\n//           {errors.adoGender && <span className=\"text-danger\">{errors.adoGender}</span>}\n//         </div>\n\n//         <div className=\"ado-form-group\">\n//           <label htmlFor=\"adoAge\">Adopter Age</label>\n//           <input\n//             type=\"text\"\n//             name=\"adoAge\"\n//             value={values.adoAge}\n//             onChange={handleInput}\n//             required\n//             placeholder=\"Enter Age\"\n//           />\n//           {errors.adoAge && <span className=\"text-danger\">{errors.adoAge}</span>}\n//         </div>\n\n//         <div className=\"ado-form-group\">\n//           <label htmlFor=\"adoNIC\">Adopter NIC</label>\n//           <input\n//             type=\"text\"\n//             name=\"adoNIC\"\n//             value={values.adoNIC}\n//             onChange={handleInput}\n//             required\n//             placeholder=\"Enter NIC\"\n//           />\n//           {errors.adoNIC && <span className=\"text-danger\">{errors.adoNIC}</span>}\n//         </div>\n\n//         <div className=\"ado-form-group\">\n//           <label htmlFor=\"adoJob\">Adopter Job</label>\n//           <input\n//             type=\"text\"\n//             name=\"adoJob\"\n//             value={values.adoJob}\n//             onChange={handleInput}\n//             required\n//             placeholder=\"Enter Job\"\n//           />\n//           {errors.adoJob && <span className=\"text-danger\">{errors.adoJob}</span>}\n//         </div>\n\n//         <div className=\"ado-form-group\">\n//           <label htmlFor=\"adoLocation\">Adopter Location</label>\n//           <input\n//             type=\"text\"\n//             name=\"adoLocation\"\n//             value={values.adoLocation}\n//             onChange={handleInput}\n//             required\n//             placeholder=\"Enter Location\"\n//           />\n//           {errors.adoLocation && <span className=\"text-danger\">{errors.adoLocation}</span>}\n//         </div>\n\n//         <div className=\"ado-form-group\">\n//           <label htmlFor=\"userID\">User ID</label>\n//           <input\n//             type=\"text\"\n//             name=\"userID\"\n//             value={values.userID}\n//             onChange={handleInput}\n//             required\n//             placeholder=\"Enter User ID\"\n//           />\n//           {errors.userID && <span className=\"text-danger\">{errors.userID}</span>}\n//         </div>\n\n//         <button type=\"submit\" className=\"dis-regi-submit\">Register</button>\n//       </form>\n//     </div>\n//   </div>\n// </div>\n\n//   );\n// }\n\n// export default AdopterRegiForm;\n\nimport React, { useState } from \"react\";\nimport \"./AdopterRegiForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdopterRegiForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    adoID: \"\",\n    adoName: \"\",\n    adoEmail: \"\",\n    adoPhone: \"\",\n    adoGender: \"\",\n    adoLocation: \"\",\n    adoReason: \"\",\n    userID: \"\"\n  });\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(\"Submitting: \", formData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"adopter-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Adopter Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Adopter ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"adoID\",\n        value: formData.adoID,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"adoName\",\n        value: formData.adoName,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"adoEmail\",\n        value: formData.adoEmail,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Phone:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"adoPhone\",\n        value: formData.adoPhone,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Gender:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"adoGender\",\n        value: formData.adoGender,\n        onChange: handleChange,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Male\",\n          children: \"Male\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Female\",\n          children: \"Female\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Other\",\n          children: \"Other\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Location:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"adoLocation\",\n        value: formData.adoLocation,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Reason for Adoption:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"adoReason\",\n        value: formData.adoReason,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"User ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"userID\",\n        value: formData.userID,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register Adopter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 357,\n    columnNumber: 5\n  }, this);\n};\n_s(AdopterRegiForm, \"WDiWI4ifzvM5kB/pih9HiNQZWK0=\");\n_c = AdopterRegiForm;\nexport default AdopterRegiForm;\nvar _c;\n$RefreshReg$(_c, \"AdopterRegiForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AdopterRegiForm","_s","formData","setFormData","adoID","adoName","adoEmail","adoPhone","adoGender","adoLocation","adoReason","userID","handleChange","e","target","name","value","handleSubmit","preventDefault","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","_c","$RefreshReg$"],"sources":["G:/My 2025/Study/Pawprint-Dogcare-main/Pawprint-Dogcare-main/Client/src/Components/AdopterRegiForm.jsx"],"sourcesContent":["// import React, { useState } from 'react';\n// import './AdopterRegiForm.css';\n\n// function AdopterRegiForm() {\n//   const [values, setValues] = useState({\n//     userID: '',\n//     adoName: '',\n//     adoNIC: '',\n//     adoAge: '',\n//     adoJob: '',\n//     adoGender: '',\n//     adoLocation: '',\n//     adoEmail: '',\n//     adoPhone: '',\n//     houseHoldComposition: '',\n//     reasonForAdoption: ''\n//   });\n\n//   const [errors, setErrors] = useState({});\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     const validationErrors = validateInputs(values);\n//     setErrors(validationErrors);\n\n//     if (Object.keys(validationErrors).length === 0) {\n//       try {\n//         const response = await fetch('http://localhost:8800/api/adopterRegi/register', {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json'\n//           },\n//           body: JSON.stringify(values)\n//         });\n//         if (response.ok) {\n//           alert('Adopter registered successfully');\n//           // window.location.href = '/services';\n//         } else {\n//           console.error('Error storing data:', response.statusText);\n//         }\n//       } catch (error) {\n//         console.error('Error:', error);\n//       }\n//     }\n//   };\n\n//   const handleInput = (event) => {\n//     const { name, value } = event.target;\n//     setValues(prev => ({ ...prev, [name]: value }));\n//   };\n\n//   const validateInputs = (values) => {\n//     let errors = {};\n//     if (!values.userID) errors.userID = 'User ID is required';\n//     if (!values.adoName) errors.adoName = 'Adopter Name is required';\n//     if (!values.adoNIC) errors.adoNIC = 'Adopter NIC is required';\n//     if (!values.adoAge) errors.adoAge = 'Adopter Age is required';\n//     if (!values.adoJob) errors.adoJob = 'Adopter Job is required';\n//     if (!values.adoGender) errors.adoGender = 'Adopter Gender is required';\n//     if (!values.adoLocation) errors.adoLocation = 'Adopter Location is required';\n//     if (!values.adoEmail) errors.adoEmail = 'Adopter Email is required';\n//     if (!values.adoPhone) errors.adoPhone = 'Adopter Phone is required';\n//     if (!values.houseHoldComposition) errors.houseHoldComposition = 'Household Composition is required';\n//     if (!values.reasonForAdoption) errors.reasonForAdoption = 'Reason for Adoption is required';\n//     return errors;\n//   };\n\n//   const backgroundStyle = {\n//     backgroundImage: \"url('/images/login1.jpg')\",\n//     backgroundSize: 'cover',\n//     backgroundPosition: 'center',\n//     minHeight: '100vh',\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//     justifyContent: 'center'\n//   };\n\n//   return (\n//     <div className=\"form-container\" style={backgroundStyle}>\n//       <div className=\"ado-regi-card\">\n//         <div className=\"ado-regi-card-body\">\n//           <h2 className=\"ado-regi-form-name\">Adopter Registration</h2>\n//           <form onSubmit={handleSubmit}>\n//             {Object.keys(values).map(key => (\n//               <div className=\"form-group\" key={key}>\n//                 <label htmlFor={key}>{key.split(/(?=[A-Z])/).join(' ')}</label>\n//                 <input\n//                   type={key === 'adoEmail' ? 'email' : 'text'}\n//                   name={key}\n//                   value={values[key]}\n//                   onChange={handleInput}\n//                   required\n//                   placeholder={`Enter ${key.split(/(?=[A-Z])/).join(' ')}`}\n//                   className=\"form-control rounded\"\n//                 />\n//                 {errors[key] && <span className=\"text-danger\">{errors[key]}</span>}\n//               </div>\n//             ))}\n//             <button type=\"submit\">Register</button>\n//           </form>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default AdopterRegiForm;\n\n\n\n// import React, { useState } from 'react';\n// import './AdopterRegiForm.css';\n// import { useNavigate } from 'react-router-dom';\n\n// function AdopterRegiForm() {\n//   const [values, setValues] = useState({\n//     adoName: '',\n//     adoEmail: '',\n//     adoPhone: '',\n//     adoLocation: '',\n//     adoNIC:'',\n//     adoAge:'',\n//     adoJob:'',\n//     adoGender:'',\n//     userID: ''\n//   });\n\n//   const [errors, setErrors] = useState({});\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     const validationErrors = validateInputs(values);\n//     setErrors(validationErrors);\n\n//     if (Object.keys(validationErrors).length === 0) {\n//       try {\n//         const response = await fetch('http://localhost:8800/api/adopter/register', {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json'\n//           },\n//           body: JSON.stringify(values)\n//         });\n\n//         const result = await response.json();\n\n//         if (response.ok) {\n//           alert(result.message || 'Adopter registered successfully');\n//         //   window.location.href = '/pet/register';\n//         } else {\n//           alert(result.error || 'This user ID is wrong or already assigned. Please sign up.');\n//           navigate('/signup');\n//         }\n//       } catch (error) {\n//         console.error('Error:', error);\n//       }\n//     }\n//   };\n\n//   const handleInput = (event) => {\n//     const { name, value } = event.target;\n//     setValues((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   const validateInputs = (values) => {\n//     let errors = {};\n//     if (!values.adoName) errors.adoName = 'Adopter Name is required';\n//     if (!values.adoEmail) errors.adoEmail = 'Adopter Email is required';\n//     if (!values.adoPhone) errors.adoPhone = 'Adopter Phone is required';\n//     if (!values.adoLocation) errors.adoLocation = 'Adopter Location is required';\n//     if (!values.adoNIC) errors.adoNIC = 'Adopter NIC is required';\n//     if (!values.adoAge) errors.adoAge = 'Adopter Age is required';\n//     if (!values.adoGender) errors.adoGender = 'Adopter Gender is required';\n//     if (!values.adoJob) errors.adoJob= 'Adopter Job is required';\n//     if (!values.userID) errors.userID = 'User ID is required';\n//     return errors;\n//   };\n\n//   const backgroundStyle = {\n//     backgroundImage: \"url('/images/login1.jpg')\",\n//     backgroundSize: 'cover',\n//     backgroundPosition: 'center',\n//     minHeight: '100vh',\n//     display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'center'\n//   };\n\n//   return (\n//     <div className=\"ado-form-container\" style={backgroundStyle}>\n//        <h1 className=\"ado-welcome-message\">Join Our Network</h1>\n//   <div className=\"ado-registration-card\">\n   \n//     <div className=\"ado-registration-card-body\">\n//       <h2 className=\"ado-regi-form-name\">Adopter Registration</h2>\n//       <form onSubmit={handleSubmit}>\n//         <div className=\"ado-form-group\">\n//           <label htmlFor=\"adoName\">Adopter Name</label>\n//           <input\n//             type=\"text\"\n//             name=\"adoName\"\n//             value={values.adoName}\n//             onChange={handleInput}\n//             required\n//             placeholder=\"Enter Adopter Name\"\n//           />\n//           {errors.adoName && <span className=\"text-danger\">{errors.adoName}</span>}\n//         </div>\n\n//         <div className=\"ado-form-group\">\n//           <label htmlFor=\"adoEmail\">Adopter Email</label>\n//           <input\n//             type=\"email\"\n//             name=\"adoEmail\"\n//             value={values.adoEmail}\n//             onChange={handleInput}\n//             required\n//             placeholder=\"Enter Distributor Email\"\n//           />\n//           {errors.adoEmail && <span className=\"text-danger\">{errors.adoEmail}</span>}\n//         </div>\n\n//         <div className=\"ado-form-group\">\n//           <label htmlFor=\"adoPhone\">Adopter Phone</label>\n//           <input\n//             type=\"text\"\n//             name=\"adoPhone\"\n//             value={values.adoPhone}\n//             onChange={handleInput}\n//             required\n//             placeholder=\"Enter Phone\"\n//           />\n//           {errors.adoPhone && <span className=\"text-danger\">{errors.adoPhone}</span>}\n//         </div>\n\n//         <div className=\"ado-form-group\">\n//           <label htmlFor=\"adoGender\">Adopter Gender</label>\n//           <input\n//             type=\"text\"\n//             name=\"adoGender\"\n//             value={values.adoGender}\n//             onChange={handleInput}\n//             required\n//             placeholder=\"Enter Gender\"\n//           />\n//           {errors.adoGender && <span className=\"text-danger\">{errors.adoGender}</span>}\n//         </div>\n\n//         <div className=\"ado-form-group\">\n//           <label htmlFor=\"adoAge\">Adopter Age</label>\n//           <input\n//             type=\"text\"\n//             name=\"adoAge\"\n//             value={values.adoAge}\n//             onChange={handleInput}\n//             required\n//             placeholder=\"Enter Age\"\n//           />\n//           {errors.adoAge && <span className=\"text-danger\">{errors.adoAge}</span>}\n//         </div>\n\n//         <div className=\"ado-form-group\">\n//           <label htmlFor=\"adoNIC\">Adopter NIC</label>\n//           <input\n//             type=\"text\"\n//             name=\"adoNIC\"\n//             value={values.adoNIC}\n//             onChange={handleInput}\n//             required\n//             placeholder=\"Enter NIC\"\n//           />\n//           {errors.adoNIC && <span className=\"text-danger\">{errors.adoNIC}</span>}\n//         </div>\n\n//         <div className=\"ado-form-group\">\n//           <label htmlFor=\"adoJob\">Adopter Job</label>\n//           <input\n//             type=\"text\"\n//             name=\"adoJob\"\n//             value={values.adoJob}\n//             onChange={handleInput}\n//             required\n//             placeholder=\"Enter Job\"\n//           />\n//           {errors.adoJob && <span className=\"text-danger\">{errors.adoJob}</span>}\n//         </div>\n\n//         <div className=\"ado-form-group\">\n//           <label htmlFor=\"adoLocation\">Adopter Location</label>\n//           <input\n//             type=\"text\"\n//             name=\"adoLocation\"\n//             value={values.adoLocation}\n//             onChange={handleInput}\n//             required\n//             placeholder=\"Enter Location\"\n//           />\n//           {errors.adoLocation && <span className=\"text-danger\">{errors.adoLocation}</span>}\n//         </div>\n\n//         <div className=\"ado-form-group\">\n//           <label htmlFor=\"userID\">User ID</label>\n//           <input\n//             type=\"text\"\n//             name=\"userID\"\n//             value={values.userID}\n//             onChange={handleInput}\n//             required\n//             placeholder=\"Enter User ID\"\n//           />\n//           {errors.userID && <span className=\"text-danger\">{errors.userID}</span>}\n//         </div>\n\n//         <button type=\"submit\" className=\"dis-regi-submit\">Register</button>\n//       </form>\n//     </div>\n//   </div>\n// </div>\n\n//   );\n// }\n\n// export default AdopterRegiForm;\n\n\n\n\n\n\nimport React, { useState } from \"react\";\nimport \"./AdopterRegiForm.css\";\n\nconst AdopterRegiForm = () => {\n  const [formData, setFormData] = useState({\n    adoID: \"\",\n    adoName: \"\",\n    adoEmail: \"\",\n    adoPhone: \"\",\n    adoGender: \"\",\n    adoLocation: \"\",\n    adoReason: \"\",\n    userID: \"\"\n  });\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(\"Submitting: \", formData);\n  };\n\n  return (\n    <div className=\"adopter-form-container\">\n      <h2>Adopter Registration</h2>\n      <form onSubmit={handleSubmit}>\n        <label>Adopter ID:</label>\n        <input type=\"text\" name=\"adoID\" value={formData.adoID} onChange={handleChange} required />\n\n        <label>Name:</label>\n        <input type=\"text\" name=\"adoName\" value={formData.adoName} onChange={handleChange} required />\n\n        <label>Email:</label>\n        <input type=\"email\" name=\"adoEmail\" value={formData.adoEmail} onChange={handleChange} required />\n\n        <label>Phone:</label>\n        <input type=\"text\" name=\"adoPhone\" value={formData.adoPhone} onChange={handleChange} required />\n\n        <label>Gender:</label>\n        <select name=\"adoGender\" value={formData.adoGender} onChange={handleChange} required>\n          <option value=\"\">Select</option>\n          <option value=\"Male\">Male</option>\n          <option value=\"Female\">Female</option>\n          <option value=\"Other\">Other</option>\n        </select>\n\n        <label>Location:</label>\n        <input type=\"text\" name=\"adoLocation\" value={formData.adoLocation} onChange={handleChange} required />\n\n        <label>Reason for Adoption:</label>\n        <textarea name=\"adoReason\" value={formData.adoReason} onChange={handleChange} required />\n\n        <label>User ID:</label>\n        <input type=\"text\" name=\"userID\" value={formData.userID} onChange={handleChange} required />\n\n        <button type=\"submit\">Register Adopter</button>\n      </form>\n    </div>\n  );\n};\n\nexport default AdopterRegiForm;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}