{"ast":null,"code":"var _jsxFileName = \"G:\\\\My 2025\\\\Study\\\\Pawprint-Dogcare-main\\\\Pawprint-Dogcare-main\\\\Client\\\\src\\\\Components\\\\DaycareRegiForm.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import './DaycareRegiForm.css';\n// import { useNavigate } from 'react-router-dom';\n\n// function DaycareRegiForm() {\n//   const [values, setValues] = useState({\n// dcName: '',\n// dcLocation: '',\n// dcPhone: '',\n// dcEmail: '',\n// openDays: '',\n// openTimes: '',\n// noOfStaffMembers: '',\n// amenitiesOffered: '',\n// safetyFeatures: '',\n// userID: ''\n//   });\n\n//   const [errors, setErrors] = useState({});\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     const validationErrors = validateInputs(values);\n//     setErrors(validationErrors);\n\n//     if (Object.keys(validationErrors).length === 0) {\n//       try {\n//         const response = await fetch('http://localhost:8800/api/daycare/register', {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json'\n//           },\n//           body: JSON.stringify(values)\n//         });\n\n//         const result = await response.json();\n\n//         if (response.ok) {\n//           alert(result.message || 'Daycare registered successfully');\n//         } else {\n//           alert(result.error || 'This user ID is wrong or already assigned. Please sign up.');\n//           navigate('/signup');\n//         }\n//       } catch (error) {\n//         console.error('Error:', error);\n//       }\n//     }\n//   };\n\n//   const handleInput = (event) => {\n//     const { name, value } = event.target;\n//     setValues((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   const validateInputs = (values) => {\n//     let errors = {};\n//     if (!values.dcName) errors.dcName = 'Daycare Name is required';\n//     if (!values.dcEmail) errors.dcEmail = 'Daycare Email is required';\n//     if (!values.dcPhone) errors.dcPhone = 'Daycare Phone is required';\n//     if (!values.dcLocation) errors.dcLocation = 'Daycare Location is required';\n//     if (!values.userID) errors.userID = 'User ID is required';\n//     return errors;\n//   };\n\n//   const backgroundStyle = {\n//     backgroundImage: \"url('/images/daycare.jpg')\",\n//     backgroundSize: 'cover',\n//     backgroundPosition: 'center',\n//     minHeight: '100vh',\n//     display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'center'\n//   };\n\n//   return (\n//     <div className=\"dc-form-container\" style={backgroundStyle}>\n//       <h1 className=\"dc-welcome-message\">Register Your Daycare</h1>\n//       <div className=\"dc-registration-card\">\n//         <div className=\"dc-registration-card-body\">\n//           <h2 className=\"dc-regi-form-name\">Daycare Registration</h2>\n//           <form onSubmit={handleSubmit}>\n//             <div className=\"dc-form-group\">\n//               <label htmlFor=\"dcName\">Daycare Name</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"dcName\"\n//                 value={values.dcName}\n//                 onChange={handleInput}\n//                 required\n//                 placeholder=\"Enter Daycare Name\"\n//               />\n//               {errors.dcName && <span className=\"text-danger\">{errors.dcName}</span>}\n//             </div>\n\n//             <div className=\"dc-form-group\">\n//               <label htmlFor=\"dcEmail\">Daycare Email</label>\n//               <input\n//                 type=\"email\"\n//                 name=\"dcEmail\"\n//                 value={values.dcEmail}\n//                 onChange={handleInput}\n//                 required\n//                 placeholder=\"Enter Daycare Email\"\n//               />\n//               {errors.dcEmail && <span className=\"text-danger\">{errors.dcEmail}</span>}\n//             </div>\n\n//             <div className=\"dc-form-group\">\n//               <label htmlFor=\"dcPhone\">Daycare Phone</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"dcPhone\"\n//                 value={values.dcPhone}\n//                 onChange={handleInput}\n//                 required\n//                 placeholder=\"Enter Phone\"\n//               />\n//               {errors.dcPhone && <span className=\"text-danger\">{errors.dcPhone}</span>}\n//             </div>\n\n//             <div className=\"dc-form-group\">\n//               <label htmlFor=\"dcLocation\">Daycare Location</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"dcLocation\"\n//                 value={values.dcLocation}\n//                 onChange={handleInput}\n//                 required\n//                 placeholder=\"Enter Location\"\n//               />\n//               {errors.dcLocation && <span className=\"text-danger\">{errors.dcLocation}</span>}\n//             </div>\n\n//             <div className=\"dc-form-group\">\n//               <label htmlFor=\"userID\">User ID</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"userID\"\n//                 value={values.userID}\n//                 onChange={handleInput}\n//                 required\n//                 placeholder=\"Enter User ID\"\n//               />\n//               {errors.userID && <span className=\"text-danger\">{errors.userID}</span>}\n//             </div>\n\n//             <div className=\"dc-form-group\">\n//               <label htmlFor=\"openDays\">Open Days</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"openDays\"\n//                 value={values.openDays}\n//                 onChange={handleInput}\n//                 placeholder=\"Enter Open Days\"\n//               />\n//             </div>\n\n//             <div className=\"dc-form-group\">\n//               <label htmlFor=\"openTimes\">Open Times</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"openTimes\"\n//                 value={values.openTimes}\n//                 onChange={handleInput}\n//                 placeholder=\"Enter Open Times\"\n//               />\n//             </div>\n\n//             <div className=\"dc-form-group\">\n//               <label htmlFor=\"noOfStaffMembers\">Number of Staff Members</label>\n//               <input\n//                 type=\"number\"\n//                 name=\"noOfStaffMembers\"\n//                 value={values.noOfStaffMembers}\n//                 onChange={handleInput}\n//                 placeholder=\"Enter Number of Staff Members\"\n//               />\n//             </div>\n\n//             <div className=\"dc-form-group\">\n//               <label htmlFor=\"amenitiesOffered\">Amenities Offered</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"amenitiesOffered\"\n//                 value={values.amenitiesOffered}\n//                 onChange={handleInput}\n//                 placeholder=\"Enter Amenities Offered\"\n//               />\n//             </div>\n\n//             <div className=\"dc-form-group\">\n//               <label htmlFor=\"safetyFeatures\">Safety Features</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"safetyFeatures\"\n//                 value={values.safetyFeatures}\n//                 onChange={handleInput}\n//                 placeholder=\"Enter Safety Features\"\n//               />\n//             </div>\n\n//             <button type=\"submit\" className=\"dc-regi-submit\">Register</button>\n//           </form>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default DaycareRegiForm;\n\nimport React, { useState } from 'react';\nimport './DaycareRegiForm.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DaycareManagement() {\n  _s();\n  const [values, setValues] = useState({\n    dcName: '',\n    dcLocation: '',\n    dcPhone: '',\n    dcEmail: '',\n    openDays: '',\n    openTimes: '',\n    noOfStaffMembers: '',\n    amenitiesOffered: '',\n    safetyFeatures: '',\n    userID: ''\n  });\n  const [errors, setErrors] = useState({});\n  const navigate = useNavigate();\n  const handleInput = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setValues(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const validateInputs = values => {\n    let errors = {};\n    if (!values.dcName) errors.dcName = 'Daycare Name is required';\n    if (!values.dcEmail) errors.dcEmail = 'Daycare Email is required';\n    if (!values.dcPhone) errors.dcPhone = 'Daycare Phone is required';\n    if (!values.dcLocation) errors.dcLocation = 'Daycare Location is required';\n    if (!values.userID) errors.userID = 'User ID is required';\n    return errors;\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const validationErrors = validateInputs(values);\n    setErrors(validationErrors);\n    if (Object.keys(validationErrors).length === 0) {\n      try {\n        const response = await fetch('http://localhost:8800/api/daycare/register', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(values)\n        });\n        const result = await response.json();\n        if (response.ok) {\n          alert(result.message || 'Daycare registered successfully');\n        } else {\n          alert(result.error || 'This user ID is wrong or already assigned. Please sign up.');\n          navigate('/signup');\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    }\n  };\n  const handleUpdate = async event => {\n    event.preventDefault();\n    if (!values.userID) {\n      alert('User ID is required to update daycare details');\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:8800/api/daycare/update/${values.userID}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(values)\n      });\n      const result = await response.json();\n      if (response.ok) {\n        alert(result.message || 'Daycare details updated successfully');\n      } else {\n        alert(result.error || 'Failed to update daycare details');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const handleDelete = async () => {\n    if (!values.userID) {\n      alert('User ID is required to delete daycare');\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:8800/api/daycare/delete/${values.userID}`, {\n        method: 'DELETE'\n      });\n      const result = await response.json();\n      if (response.ok) {\n        alert(result.message || 'Daycare deleted successfully');\n        setValues({\n          dcName: '',\n          dcLocation: '',\n          dcPhone: '',\n          dcEmail: '',\n          openDays: '',\n          openTimes: '',\n          noOfStaffMembers: '',\n          amenitiesOffered: '',\n          safetyFeatures: '',\n          userID: ''\n        });\n      } else {\n        alert(result.error || 'Failed to delete daycare');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dc-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"dc-welcome-message\",\n      children: \"Manage Your Daycare\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dc-registration-card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dc-registration-card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"dc-regi-form-name\",\n          children: \"Daycare Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [Object.keys(values).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dc-form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: key,\n              children: key.replace(/([A-Z])/g, ' $1').trim()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: key === 'noOfStaffMembers' ? 'number' : 'text',\n              name: key,\n              value: values[key],\n              onChange: handleInput,\n              placeholder: `Enter ${key.replace(/([A-Z])/g, ' $1').trim()}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 17\n            }, this), errors[key] && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: errors[key]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 33\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleSubmit,\n            className: \"dc-regi-submit\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleUpdate,\n            className: \"dc-regi-update\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleDelete,\n            className: \"dc-regi-delete\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 326,\n    columnNumber: 5\n  }, this);\n}\n_s(DaycareManagement, \"X/RRLD/p0Dlq347JSjgXiEL/7wA=\", false, function () {\n  return [useNavigate];\n});\n_c = DaycareManagement;\nexport default DaycareManagement;\nvar _c;\n$RefreshReg$(_c, \"DaycareManagement\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","DaycareManagement","_s","values","setValues","dcName","dcLocation","dcPhone","dcEmail","openDays","openTimes","noOfStaffMembers","amenitiesOffered","safetyFeatures","userID","errors","setErrors","navigate","handleInput","event","name","value","target","prev","validateInputs","handleSubmit","preventDefault","validationErrors","Object","keys","length","response","fetch","method","headers","body","JSON","stringify","result","json","ok","alert","message","error","console","handleUpdate","handleDelete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","key","htmlFor","replace","trim","type","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["G:/My 2025/Study/Pawprint-Dogcare-main/Pawprint-Dogcare-main/Client/src/Components/DaycareRegiForm.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import './DaycareRegiForm.css';\n// import { useNavigate } from 'react-router-dom';\n\n// function DaycareRegiForm() {\n//   const [values, setValues] = useState({\n    // dcName: '',\n    // dcLocation: '',\n    // dcPhone: '',\n    // dcEmail: '',\n    // openDays: '',\n    // openTimes: '',\n    // noOfStaffMembers: '',\n    // amenitiesOffered: '',\n    // safetyFeatures: '',\n    // userID: ''\n//   });\n\n//   const [errors, setErrors] = useState({});\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     const validationErrors = validateInputs(values);\n//     setErrors(validationErrors);\n\n//     if (Object.keys(validationErrors).length === 0) {\n//       try {\n//         const response = await fetch('http://localhost:8800/api/daycare/register', {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json'\n//           },\n//           body: JSON.stringify(values)\n//         });\n\n//         const result = await response.json();\n\n//         if (response.ok) {\n//           alert(result.message || 'Daycare registered successfully');\n//         } else {\n//           alert(result.error || 'This user ID is wrong or already assigned. Please sign up.');\n//           navigate('/signup');\n//         }\n//       } catch (error) {\n//         console.error('Error:', error);\n//       }\n//     }\n//   };\n\n//   const handleInput = (event) => {\n//     const { name, value } = event.target;\n//     setValues((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   const validateInputs = (values) => {\n//     let errors = {};\n//     if (!values.dcName) errors.dcName = 'Daycare Name is required';\n//     if (!values.dcEmail) errors.dcEmail = 'Daycare Email is required';\n//     if (!values.dcPhone) errors.dcPhone = 'Daycare Phone is required';\n//     if (!values.dcLocation) errors.dcLocation = 'Daycare Location is required';\n//     if (!values.userID) errors.userID = 'User ID is required';\n//     return errors;\n//   };\n\n//   const backgroundStyle = {\n//     backgroundImage: \"url('/images/daycare.jpg')\",\n//     backgroundSize: 'cover',\n//     backgroundPosition: 'center',\n//     minHeight: '100vh',\n//     display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'center'\n//   };\n\n//   return (\n//     <div className=\"dc-form-container\" style={backgroundStyle}>\n//       <h1 className=\"dc-welcome-message\">Register Your Daycare</h1>\n//       <div className=\"dc-registration-card\">\n//         <div className=\"dc-registration-card-body\">\n//           <h2 className=\"dc-regi-form-name\">Daycare Registration</h2>\n//           <form onSubmit={handleSubmit}>\n//             <div className=\"dc-form-group\">\n//               <label htmlFor=\"dcName\">Daycare Name</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"dcName\"\n//                 value={values.dcName}\n//                 onChange={handleInput}\n//                 required\n//                 placeholder=\"Enter Daycare Name\"\n//               />\n//               {errors.dcName && <span className=\"text-danger\">{errors.dcName}</span>}\n//             </div>\n\n//             <div className=\"dc-form-group\">\n//               <label htmlFor=\"dcEmail\">Daycare Email</label>\n//               <input\n//                 type=\"email\"\n//                 name=\"dcEmail\"\n//                 value={values.dcEmail}\n//                 onChange={handleInput}\n//                 required\n//                 placeholder=\"Enter Daycare Email\"\n//               />\n//               {errors.dcEmail && <span className=\"text-danger\">{errors.dcEmail}</span>}\n//             </div>\n\n//             <div className=\"dc-form-group\">\n//               <label htmlFor=\"dcPhone\">Daycare Phone</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"dcPhone\"\n//                 value={values.dcPhone}\n//                 onChange={handleInput}\n//                 required\n//                 placeholder=\"Enter Phone\"\n//               />\n//               {errors.dcPhone && <span className=\"text-danger\">{errors.dcPhone}</span>}\n//             </div>\n\n//             <div className=\"dc-form-group\">\n//               <label htmlFor=\"dcLocation\">Daycare Location</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"dcLocation\"\n//                 value={values.dcLocation}\n//                 onChange={handleInput}\n//                 required\n//                 placeholder=\"Enter Location\"\n//               />\n//               {errors.dcLocation && <span className=\"text-danger\">{errors.dcLocation}</span>}\n//             </div>\n\n//             <div className=\"dc-form-group\">\n//               <label htmlFor=\"userID\">User ID</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"userID\"\n//                 value={values.userID}\n//                 onChange={handleInput}\n//                 required\n//                 placeholder=\"Enter User ID\"\n//               />\n//               {errors.userID && <span className=\"text-danger\">{errors.userID}</span>}\n//             </div>\n\n//             <div className=\"dc-form-group\">\n//               <label htmlFor=\"openDays\">Open Days</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"openDays\"\n//                 value={values.openDays}\n//                 onChange={handleInput}\n//                 placeholder=\"Enter Open Days\"\n//               />\n//             </div>\n\n//             <div className=\"dc-form-group\">\n//               <label htmlFor=\"openTimes\">Open Times</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"openTimes\"\n//                 value={values.openTimes}\n//                 onChange={handleInput}\n//                 placeholder=\"Enter Open Times\"\n//               />\n//             </div>\n\n//             <div className=\"dc-form-group\">\n//               <label htmlFor=\"noOfStaffMembers\">Number of Staff Members</label>\n//               <input\n//                 type=\"number\"\n//                 name=\"noOfStaffMembers\"\n//                 value={values.noOfStaffMembers}\n//                 onChange={handleInput}\n//                 placeholder=\"Enter Number of Staff Members\"\n//               />\n//             </div>\n\n//             <div className=\"dc-form-group\">\n//               <label htmlFor=\"amenitiesOffered\">Amenities Offered</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"amenitiesOffered\"\n//                 value={values.amenitiesOffered}\n//                 onChange={handleInput}\n//                 placeholder=\"Enter Amenities Offered\"\n//               />\n//             </div>\n\n//             <div className=\"dc-form-group\">\n//               <label htmlFor=\"safetyFeatures\">Safety Features</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"safetyFeatures\"\n//                 value={values.safetyFeatures}\n//                 onChange={handleInput}\n//                 placeholder=\"Enter Safety Features\"\n//               />\n//             </div>\n\n//             <button type=\"submit\" className=\"dc-regi-submit\">Register</button>\n//           </form>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default DaycareRegiForm;\n\n\nimport React, { useState } from 'react';\nimport './DaycareRegiForm.css';\nimport { useNavigate } from 'react-router-dom';\n\nfunction DaycareManagement() {\n  const [values, setValues] = useState({\n    dcName: '',\n    dcLocation: '',\n    dcPhone: '',\n    dcEmail: '',\n    openDays: '',\n    openTimes: '',\n    noOfStaffMembers: '',\n    amenitiesOffered: '',\n    safetyFeatures: '',\n    userID: ''\n  });\n\n  const [errors, setErrors] = useState({});\n  const navigate = useNavigate();\n\n  const handleInput = (event) => {\n    const { name, value } = event.target;\n    setValues((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const validateInputs = (values) => {\n    let errors = {};\n    if (!values.dcName) errors.dcName = 'Daycare Name is required';\n    if (!values.dcEmail) errors.dcEmail = 'Daycare Email is required';\n    if (!values.dcPhone) errors.dcPhone = 'Daycare Phone is required';\n    if (!values.dcLocation) errors.dcLocation = 'Daycare Location is required';\n    if (!values.userID) errors.userID = 'User ID is required';\n    return errors;\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const validationErrors = validateInputs(values);\n    setErrors(validationErrors);\n\n    if (Object.keys(validationErrors).length === 0) {\n      try {\n        const response = await fetch('http://localhost:8800/api/daycare/register', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(values)\n        });\n\n        const result = await response.json();\n        if (response.ok) {\n          alert(result.message || 'Daycare registered successfully');\n        } else {\n          alert(result.error || 'This user ID is wrong or already assigned. Please sign up.');\n          navigate('/signup');\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    }\n  };\n\n  const handleUpdate = async (event) => {\n    event.preventDefault();\n    if (!values.userID) {\n      alert('User ID is required to update daycare details');\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:8800/api/daycare/update/${values.userID}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(values)\n      });\n\n      const result = await response.json();\n      if (response.ok) {\n        alert(result.message || 'Daycare details updated successfully');\n      } else {\n        alert(result.error || 'Failed to update daycare details');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  const handleDelete = async () => {\n    if (!values.userID) {\n      alert('User ID is required to delete daycare');\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:8800/api/daycare/delete/${values.userID}`, {\n        method: 'DELETE'\n      });\n\n      const result = await response.json();\n      if (response.ok) {\n        alert(result.message || 'Daycare deleted successfully');\n        setValues({\n          dcName: '', dcLocation: '', dcPhone: '', dcEmail: '', openDays: '',\n          openTimes: '', noOfStaffMembers: '', amenitiesOffered: '', safetyFeatures: '', userID: ''\n        });\n      } else {\n        alert(result.error || 'Failed to delete daycare');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <div className=\"dc-form-container\">\n      <h1 className=\"dc-welcome-message\">Manage Your Daycare</h1>\n      <div className=\"dc-registration-card\">\n        <div className=\"dc-registration-card-body\">\n          <h2 className=\"dc-regi-form-name\">Daycare Form</h2>\n          <form>\n            {Object.keys(values).map((key) => (\n              <div className=\"dc-form-group\" key={key}>\n                <label htmlFor={key}>{key.replace(/([A-Z])/g, ' $1').trim()}</label>\n                <input\n                  type={key === 'noOfStaffMembers' ? 'number' : 'text'}\n                  name={key}\n                  value={values[key]}\n                  onChange={handleInput}\n                  placeholder={`Enter ${key.replace(/([A-Z])/g, ' $1').trim()}`}\n                />\n                {errors[key] && <span className=\"text-danger\">{errors[key]}</span>}\n              </div>\n            ))}\n            <button type=\"button\" onClick={handleSubmit} className=\"dc-regi-submit\">Register</button>\n            <button type=\"button\" onClick={handleUpdate} className=\"dc-regi-update\">Update</button>\n            <button type=\"button\" onClick={handleDelete} className=\"dc-regi-delete\">Delete</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default DaycareManagement;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,uBAAuB;AAC9B,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC;IACnCQ,MAAM,EAAE,EAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}