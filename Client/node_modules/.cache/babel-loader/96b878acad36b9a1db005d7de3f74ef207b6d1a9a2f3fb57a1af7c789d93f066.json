{"ast":null,"code":"var _jsxFileName = \"G:\\\\My 2025\\\\Study\\\\Pawprint-Dogcare-main\\\\Pawprint-Dogcare-main\\\\Client\\\\src\\\\Components\\\\DistributorRegiForm.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import './DistributorRegiForm.css';\n// import { useNavigate } from 'react-router-dom';\n\n// function DistributorRegiForm() {\n//   const [values, setValues] = useState({\n//     disName: '',\n//     disEmail: '',\n//     disPhone: '',\n//     disLocation: '',\n//     userID: ''\n//   });\n\n//   const [errors, setErrors] = useState({});\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     const validationErrors = validateInputs(values);\n//     setErrors(validationErrors);\n\n//     if (Object.keys(validationErrors).length === 0) {\n//       try {\n//         const response = await fetch('http://localhost:8800/api/distributor/register', {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json'\n//           },\n//           body: JSON.stringify(values)\n//         });\n\n//         const result = await response.json();\n\n//         if (response.ok) {\n//           alert(result.message || 'Distributor registered successfully');\n//           window.location.href = '/pet/register';\n//         } else {\n//           alert(result.error || 'This user ID is wrong or already assigned. Please sign up.');\n//           navigate('/signup');\n//         }\n//       } catch (error) {\n//         console.error('Error:', error);\n//       }\n//     }\n//   };\n\n//   const handleInput = (event) => {\n//     const { name, value } = event.target;\n//     setValues((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   const validateInputs = (values) => {\n//     let errors = {};\n//     if (!values.disName) errors.disName = 'Distributor Name is required';\n//     if (!values.disEmail) errors.disEmail = 'Distributor Email is required';\n//     if (!values.disPhone) errors.disPhone = 'Distributor Phone is required';\n//     if (!values.disLocation) errors.disLocation = 'Distributor Location is required';\n//     if (!values.userID) errors.userID = 'User ID is required';\n//     return errors;\n//   };\n\n//   const backgroundStyle = {\n//     backgroundImage: \"url('/images/login1.jpg')\",\n//     backgroundSize: 'cover',\n//     backgroundPosition: 'center',\n//     minHeight: '100vh',\n//     display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'center'\n//   };\n\n//   return (\n//     <div className=\"dis-form-container\" style={backgroundStyle}>\n//        <h1 className=\"dis-welcome-message\">Join Our Network</h1>\n//   <div className=\"dis-registration-card\">\n\n//     <div className=\"dis-registration-card-body\">\n//       <h2 className=\"dis-regi-form-name\">Distributor Registration</h2>\n//       <form onSubmit={handleSubmit}>\n//         <div className=\"dis-form-group\">\n//           <label htmlFor=\"disName\">Distributor Name</label>\n//           <input\n//             type=\"text\"\n//             name=\"disName\"\n//             value={values.disName}\n//             onChange={handleInput}\n//             required\n//             placeholder=\"Enter Distributor Name\"\n//           />\n//           {errors.disName && <span className=\"text-danger\">{errors.disName}</span>}\n//         </div>\n\n//         <div className=\"dis-form-group\">\n//           <label htmlFor=\"disEmail\">Distributor Email</label>\n//           <input\n//             type=\"email\"\n//             name=\"disEmail\"\n//             value={values.disEmail}\n//             onChange={handleInput}\n//             required\n//             placeholder=\"Enter Distributor Email\"\n//           />\n//           {errors.disEmail && <span className=\"text-danger\">{errors.disEmail}</span>}\n//         </div>\n\n//         <div className=\"dis-form-group\">\n//           <label htmlFor=\"disPhone\">Distributor Phone</label>\n//           <input\n//             type=\"text\"\n//             name=\"disPhone\"\n//             value={values.disPhone}\n//             onChange={handleInput}\n//             required\n//             placeholder=\"Enter Phone\"\n//           />\n//           {errors.disPhone && <span className=\"text-danger\">{errors.disPhone}</span>}\n//         </div>\n\n//         <div className=\"dis-form-group\">\n//           <label htmlFor=\"disLocation\">Distributor Location</label>\n//           <input\n//             type=\"text\"\n//             name=\"disLocation\"\n//             value={values.disLocation}\n//             onChange={handleInput}\n//             required\n//             placeholder=\"Enter Location\"\n//           />\n//           {errors.disLocation && <span className=\"text-danger\">{errors.disLocation}</span>}\n//         </div>\n\n//         <div className=\"dis-form-group\">\n//           <label htmlFor=\"userID\">User ID</label>\n//           <input\n//             type=\"text\"\n//             name=\"userID\"\n//             value={values.userID}\n//             onChange={handleInput}\n//             required\n//             placeholder=\"Enter User ID\"\n//           />\n//           {errors.userID && <span className=\"text-danger\">{errors.userID}</span>}\n//         </div>\n\n//         <button type=\"submit\" className=\"dis-regi-submit\">Register</button>\n//       </form>\n//     </div>\n//   </div>\n// </div>\n\n//   );\n// }\n\n// export default DistributorRegiForm;\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FaUserEdit, FaTrashAlt, FaPlusCircle } from 'react-icons/fa';\nimport './DistributorRegiForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DistributorRegiForm() {\n  _s();\n  const [values, setValues] = useState({\n    disName: '',\n    disEmail: '',\n    disPhone: '',\n    disLocation: '',\n    userID: ''\n  });\n  const [updateValues, setUpdateValues] = useState({\n    disID: '',\n    disName: '',\n    disEmail: '',\n    disPhone: '',\n    disLocation: ''\n  });\n  const [deleteID, setDeleteID] = useState('');\n  const [errors, setErrors] = useState({});\n  const navigate = useNavigate();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const validationErrors = validateInputs(values);\n    setErrors(validationErrors);\n    if (Object.keys(validationErrors).length === 0) {\n      try {\n        const response = await fetch('http://localhost:8800/api/distributor/register', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(values)\n        });\n        const result = await response.json();\n        if (response.ok) {\n          alert(result.message || 'Distributor registered successfully');\n          window.location.href = '/pet/register';\n        } else {\n          alert(result.error || 'This user ID is wrong or already assigned. Please sign up.');\n          navigate('/signup');\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    }\n  };\n  const handleUpdate = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:8800/api/distributor/update/${updateValues.disID}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updateValues)\n      });\n      const result = await response.json();\n      if (response.ok) {\n        alert('Distributor updated successfully');\n      } else {\n        alert(result.error || 'Failed to update distributor');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const handleDelete = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:8800/api/distributor/delete/${deleteID}`, {\n        method: 'DELETE'\n      });\n      const result = await response.json();\n      if (response.ok) {\n        alert('Distributor deleted successfully');\n      } else {\n        alert(result.error || 'Failed to delete distributor');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const handleInput = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setValues(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleUpdateInput = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUpdateValues(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const validateInputs = values => {\n    let errors = {};\n    if (!values.disName) errors.disName = 'Distributor Name is required';\n    if (!values.disEmail) errors.disEmail = 'Distributor Email is required';\n    if (!values.disPhone) errors.disPhone = 'Distributor Phone is required';\n    if (!values.disLocation) errors.disLocation = 'Distributor Location is required';\n    if (!values.userID) errors.userID = 'User ID is required';\n    return errors;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"distributor-management\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Distributor Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Manage your distributor details efficiently.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [/*#__PURE__*/_jsxDEV(FaPlusCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this), \" Register Distributor\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"disName\",\n          placeholder: \"Distributor Name\",\n          onChange: handleInput,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"disEmail\",\n          placeholder: \"Email\",\n          onChange: handleInput,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"disPhone\",\n          placeholder: \"Phone\",\n          onChange: handleInput,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"disLocation\",\n          placeholder: \"Location\",\n          onChange: handleInput,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"userID\",\n          placeholder: \"User ID\",\n          onChange: handleInput,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [/*#__PURE__*/_jsxDEV(FaUserEdit, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this), \" Update Distributor\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleUpdate,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"disID\",\n          placeholder: \"Distributor ID\",\n          onChange: handleUpdateInput,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"disName\",\n          placeholder: \"New Name\",\n          onChange: handleUpdateInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"disEmail\",\n          placeholder: \"New Email\",\n          onChange: handleUpdateInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"disPhone\",\n          placeholder: \"New Phone\",\n          onChange: handleUpdateInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"disLocation\",\n          placeholder: \"New Location\",\n          onChange: handleUpdateInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [/*#__PURE__*/_jsxDEV(FaTrashAlt, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this), \" Delete Distributor\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleDelete,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"deleteID\",\n          placeholder: \"Distributor ID\",\n          onChange: e => setDeleteID(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 278,\n    columnNumber: 5\n  }, this);\n}\n_s(DistributorRegiForm, \"jwZg9pLrkHqpOVVnUqrL6livFPU=\", false, function () {\n  return [useNavigate];\n});\n_c = DistributorRegiForm;\nexport default DistributorRegiForm;\nvar _c;\n$RefreshReg$(_c, \"DistributorRegiForm\");","map":{"version":3,"names":["React","useState","useNavigate","FaUserEdit","FaTrashAlt","FaPlusCircle","jsxDEV","_jsxDEV","DistributorRegiForm","_s","values","setValues","disName","disEmail","disPhone","disLocation","userID","updateValues","setUpdateValues","disID","deleteID","setDeleteID","errors","setErrors","navigate","handleSubmit","event","preventDefault","validationErrors","validateInputs","Object","keys","length","response","fetch","method","headers","body","JSON","stringify","result","json","ok","alert","message","window","location","href","error","console","handleUpdate","handleDelete","handleInput","name","value","target","prev","handleUpdateInput","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","e","_c","$RefreshReg$"],"sources":["G:/My 2025/Study/Pawprint-Dogcare-main/Pawprint-Dogcare-main/Client/src/Components/DistributorRegiForm.jsx"],"sourcesContent":["// import React, { useState } from 'react';\n// import './DistributorRegiForm.css';\n// import { useNavigate } from 'react-router-dom';\n\n// function DistributorRegiForm() {\n//   const [values, setValues] = useState({\n//     disName: '',\n//     disEmail: '',\n//     disPhone: '',\n//     disLocation: '',\n//     userID: ''\n//   });\n\n//   const [errors, setErrors] = useState({});\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     const validationErrors = validateInputs(values);\n//     setErrors(validationErrors);\n\n//     if (Object.keys(validationErrors).length === 0) {\n//       try {\n//         const response = await fetch('http://localhost:8800/api/distributor/register', {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json'\n//           },\n//           body: JSON.stringify(values)\n//         });\n\n//         const result = await response.json();\n\n//         if (response.ok) {\n//           alert(result.message || 'Distributor registered successfully');\n//           window.location.href = '/pet/register';\n//         } else {\n//           alert(result.error || 'This user ID is wrong or already assigned. Please sign up.');\n//           navigate('/signup');\n//         }\n//       } catch (error) {\n//         console.error('Error:', error);\n//       }\n//     }\n//   };\n\n//   const handleInput = (event) => {\n//     const { name, value } = event.target;\n//     setValues((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   const validateInputs = (values) => {\n//     let errors = {};\n//     if (!values.disName) errors.disName = 'Distributor Name is required';\n//     if (!values.disEmail) errors.disEmail = 'Distributor Email is required';\n//     if (!values.disPhone) errors.disPhone = 'Distributor Phone is required';\n//     if (!values.disLocation) errors.disLocation = 'Distributor Location is required';\n//     if (!values.userID) errors.userID = 'User ID is required';\n//     return errors;\n//   };\n\n//   const backgroundStyle = {\n//     backgroundImage: \"url('/images/login1.jpg')\",\n//     backgroundSize: 'cover',\n//     backgroundPosition: 'center',\n//     minHeight: '100vh',\n//     display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'center'\n//   };\n\n//   return (\n//     <div className=\"dis-form-container\" style={backgroundStyle}>\n//        <h1 className=\"dis-welcome-message\">Join Our Network</h1>\n//   <div className=\"dis-registration-card\">\n   \n//     <div className=\"dis-registration-card-body\">\n//       <h2 className=\"dis-regi-form-name\">Distributor Registration</h2>\n//       <form onSubmit={handleSubmit}>\n//         <div className=\"dis-form-group\">\n//           <label htmlFor=\"disName\">Distributor Name</label>\n//           <input\n//             type=\"text\"\n//             name=\"disName\"\n//             value={values.disName}\n//             onChange={handleInput}\n//             required\n//             placeholder=\"Enter Distributor Name\"\n//           />\n//           {errors.disName && <span className=\"text-danger\">{errors.disName}</span>}\n//         </div>\n\n//         <div className=\"dis-form-group\">\n//           <label htmlFor=\"disEmail\">Distributor Email</label>\n//           <input\n//             type=\"email\"\n//             name=\"disEmail\"\n//             value={values.disEmail}\n//             onChange={handleInput}\n//             required\n//             placeholder=\"Enter Distributor Email\"\n//           />\n//           {errors.disEmail && <span className=\"text-danger\">{errors.disEmail}</span>}\n//         </div>\n\n//         <div className=\"dis-form-group\">\n//           <label htmlFor=\"disPhone\">Distributor Phone</label>\n//           <input\n//             type=\"text\"\n//             name=\"disPhone\"\n//             value={values.disPhone}\n//             onChange={handleInput}\n//             required\n//             placeholder=\"Enter Phone\"\n//           />\n//           {errors.disPhone && <span className=\"text-danger\">{errors.disPhone}</span>}\n//         </div>\n\n//         <div className=\"dis-form-group\">\n//           <label htmlFor=\"disLocation\">Distributor Location</label>\n//           <input\n//             type=\"text\"\n//             name=\"disLocation\"\n//             value={values.disLocation}\n//             onChange={handleInput}\n//             required\n//             placeholder=\"Enter Location\"\n//           />\n//           {errors.disLocation && <span className=\"text-danger\">{errors.disLocation}</span>}\n//         </div>\n\n//         <div className=\"dis-form-group\">\n//           <label htmlFor=\"userID\">User ID</label>\n//           <input\n//             type=\"text\"\n//             name=\"userID\"\n//             value={values.userID}\n//             onChange={handleInput}\n//             required\n//             placeholder=\"Enter User ID\"\n//           />\n//           {errors.userID && <span className=\"text-danger\">{errors.userID}</span>}\n//         </div>\n\n//         <button type=\"submit\" className=\"dis-regi-submit\">Register</button>\n//       </form>\n//     </div>\n//   </div>\n// </div>\n\n//   );\n// }\n\n// export default DistributorRegiForm;\n\n\n\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FaUserEdit, FaTrashAlt, FaPlusCircle } from 'react-icons/fa';\nimport './DistributorRegiForm.css';\n\nfunction DistributorRegiForm() {\n  const [values, setValues] = useState({\n    disName: '',\n    disEmail: '',\n    disPhone: '',\n    disLocation: '',\n    userID: ''\n  });\n  \n  const [updateValues, setUpdateValues] = useState({\n    disID: '',\n    disName: '',\n    disEmail: '',\n    disPhone: '',\n    disLocation: ''\n  });\n  \n  const [deleteID, setDeleteID] = useState('');\n  const [errors, setErrors] = useState({});\n  const navigate = useNavigate();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const validationErrors = validateInputs(values);\n    setErrors(validationErrors);\n\n    if (Object.keys(validationErrors).length === 0) {\n      try {\n        const response = await fetch('http://localhost:8800/api/distributor/register', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(values)\n        });\n\n        const result = await response.json();\n\n        if (response.ok) {\n          alert(result.message || 'Distributor registered successfully');\n          window.location.href = '/pet/register';\n        } else {\n          alert(result.error || 'This user ID is wrong or already assigned. Please sign up.');\n          navigate('/signup');\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    }\n  };\n\n  const handleUpdate = async (event) => {\n    event.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:8800/api/distributor/update/${updateValues.disID}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updateValues)\n      });\n\n      const result = await response.json();\n\n      if (response.ok) {\n        alert('Distributor updated successfully');\n      } else {\n        alert(result.error || 'Failed to update distributor');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  const handleDelete = async (event) => {\n    event.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:8800/api/distributor/delete/${deleteID}`, {\n        method: 'DELETE'\n      });\n\n      const result = await response.json();\n\n      if (response.ok) {\n        alert('Distributor deleted successfully');\n      } else {\n        alert(result.error || 'Failed to delete distributor');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  const handleInput = (event) => {\n    const { name, value } = event.target;\n    setValues((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handleUpdateInput = (event) => {\n    const { name, value } = event.target;\n    setUpdateValues((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const validateInputs = (values) => {\n    let errors = {};\n    if (!values.disName) errors.disName = 'Distributor Name is required';\n    if (!values.disEmail) errors.disEmail = 'Distributor Email is required';\n    if (!values.disPhone) errors.disPhone = 'Distributor Phone is required';\n    if (!values.disLocation) errors.disLocation = 'Distributor Location is required';\n    if (!values.userID) errors.userID = 'User ID is required';\n    return errors;\n  };\n\n  return (\n    <div className=\"distributor-management\">\n      <h1>Distributor Management</h1>\n      <p>Manage your distributor details efficiently.</p>\n      \n      {/* Add Distributor */}\n      <div className=\"form-section\">\n        <h2><FaPlusCircle /> Register Distributor</h2>\n        <form onSubmit={handleSubmit}>\n          <input type=\"text\" name=\"disName\" placeholder=\"Distributor Name\" onChange={handleInput} required />\n          <input type=\"email\" name=\"disEmail\" placeholder=\"Email\" onChange={handleInput} required />\n          <input type=\"text\" name=\"disPhone\" placeholder=\"Phone\" onChange={handleInput} required />\n          <input type=\"text\" name=\"disLocation\" placeholder=\"Location\" onChange={handleInput} required />\n          <input type=\"text\" name=\"userID\" placeholder=\"User ID\" onChange={handleInput} required />\n          <button type=\"submit\">Register</button>\n        </form>\n      </div>\n\n      {/* Update Distributor */}\n      <div className=\"form-section\">\n        <h2><FaUserEdit /> Update Distributor</h2>\n        <form onSubmit={handleUpdate}>\n          <input type=\"text\" name=\"disID\" placeholder=\"Distributor ID\" onChange={handleUpdateInput} required />\n          <input type=\"text\" name=\"disName\" placeholder=\"New Name\" onChange={handleUpdateInput} />\n          <input type=\"email\" name=\"disEmail\" placeholder=\"New Email\" onChange={handleUpdateInput} />\n          <input type=\"text\" name=\"disPhone\" placeholder=\"New Phone\" onChange={handleUpdateInput} />\n          <input type=\"text\" name=\"disLocation\" placeholder=\"New Location\" onChange={handleUpdateInput} />\n          <button type=\"submit\">Update</button>\n        </form>\n      </div>\n\n      {/* Delete Distributor */}\n      <div className=\"form-section\">\n        <h2><FaTrashAlt /> Delete Distributor</h2>\n        <form onSubmit={handleDelete}>\n          <input type=\"text\" name=\"deleteID\" placeholder=\"Distributor ID\" onChange={(e) => setDeleteID(e.target.value)} required />\n          <button type=\"submit\">Delete</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default DistributorRegiForm;\n\n\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAKA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,UAAU,EAAEC,UAAU,EAAEC,YAAY,QAAQ,gBAAgB;AACrE,OAAO,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,mBAAmBA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC;IACnCW,OAAO,EAAE,EAAE;IACXC,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,WAAW,EAAE,EAAE;IACfC,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC;IAC/CkB,KAAK,EAAE,EAAE;IACTP,OAAO,EAAE,EAAE;IACXC,QAAQ,EAAE,EAAE;IACZC,Q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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}