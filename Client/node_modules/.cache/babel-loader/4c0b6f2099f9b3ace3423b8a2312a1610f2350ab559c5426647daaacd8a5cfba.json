{"ast":null,"code":"var _jsxFileName = \"G:\\\\My 2025\\\\Study\\\\Pawprint-Dogcare-main\\\\Pawprint-Dogcare-main\\\\Client\\\\src\\\\Components\\\\DistributorRegiForm.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import './DistributorRegiForm.css';\n// import { useNavigate } from 'react-router-dom';\n\n// function DistributorRegiForm() {\n//   const [values, setValues] = useState({\n//     disName: '',\n//     disEmail: '',\n//     disPhone: '',\n//     disLocation: '',\n//     userID: ''\n//   });\n\n//   const [errors, setErrors] = useState({});\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     const validationErrors = validateInputs(values);\n//     setErrors(validationErrors);\n\n//     if (Object.keys(validationErrors).length === 0) {\n//       try {\n//         const response = await fetch('http://localhost:8800/api/distributor/register', {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json'\n//           },\n//           body: JSON.stringify(values)\n//         });\n\n//         const result = await response.json();\n\n//         if (response.ok) {\n//           alert(result.message || 'Distributor registered successfully');\n//           window.location.href = '/pet/register';\n//         } else {\n//           alert(result.error || 'This user ID is wrong or already assigned. Please sign up.');\n//           navigate('/signup');\n//         }\n//       } catch (error) {\n//         console.error('Error:', error);\n//       }\n//     }\n//   };\n\n//   const handleInput = (event) => {\n//     const { name, value } = event.target;\n//     setValues((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   const validateInputs = (values) => {\n//     let errors = {};\n//     if (!values.disName) errors.disName = 'Distributor Name is required';\n//     if (!values.disEmail) errors.disEmail = 'Distributor Email is required';\n//     if (!values.disPhone) errors.disPhone = 'Distributor Phone is required';\n//     if (!values.disLocation) errors.disLocation = 'Distributor Location is required';\n//     if (!values.userID) errors.userID = 'User ID is required';\n//     return errors;\n//   };\n\n//   const backgroundStyle = {\n//     backgroundImage: \"url('/images/login1.jpg')\",\n//     backgroundSize: 'cover',\n//     backgroundPosition: 'center',\n//     minHeight: '100vh',\n//     display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'center'\n//   };\n\n//   return (\n//     <div className=\"dis-form-container\" style={backgroundStyle}>\n//        <h1 className=\"dis-welcome-message\">Join Our Network</h1>\n//   <div className=\"dis-registration-card\">\n\n//     <div className=\"dis-registration-card-body\">\n//       <h2 className=\"dis-regi-form-name\">Distributor Registration</h2>\n//       <form onSubmit={handleSubmit}>\n//         <div className=\"dis-form-group\">\n//           <label htmlFor=\"disName\">Distributor Name</label>\n//           <input\n//             type=\"text\"\n//             name=\"disName\"\n//             value={values.disName}\n//             onChange={handleInput}\n//             required\n//             placeholder=\"Enter Distributor Name\"\n//           />\n//           {errors.disName && <span className=\"text-danger\">{errors.disName}</span>}\n//         </div>\n\n//         <div className=\"dis-form-group\">\n//           <label htmlFor=\"disEmail\">Distributor Email</label>\n//           <input\n//             type=\"email\"\n//             name=\"disEmail\"\n//             value={values.disEmail}\n//             onChange={handleInput}\n//             required\n//             placeholder=\"Enter Distributor Email\"\n//           />\n//           {errors.disEmail && <span className=\"text-danger\">{errors.disEmail}</span>}\n//         </div>\n\n//         <div className=\"dis-form-group\">\n//           <label htmlFor=\"disPhone\">Distributor Phone</label>\n//           <input\n//             type=\"text\"\n//             name=\"disPhone\"\n//             value={values.disPhone}\n//             onChange={handleInput}\n//             required\n//             placeholder=\"Enter Phone\"\n//           />\n//           {errors.disPhone && <span className=\"text-danger\">{errors.disPhone}</span>}\n//         </div>\n\n//         <div className=\"dis-form-group\">\n//           <label htmlFor=\"disLocation\">Distributor Location</label>\n//           <input\n//             type=\"text\"\n//             name=\"disLocation\"\n//             value={values.disLocation}\n//             onChange={handleInput}\n//             required\n//             placeholder=\"Enter Location\"\n//           />\n//           {errors.disLocation && <span className=\"text-danger\">{errors.disLocation}</span>}\n//         </div>\n\n//         <div className=\"dis-form-group\">\n//           <label htmlFor=\"userID\">User ID</label>\n//           <input\n//             type=\"text\"\n//             name=\"userID\"\n//             value={values.userID}\n//             onChange={handleInput}\n//             required\n//             placeholder=\"Enter User ID\"\n//           />\n//           {errors.userID && <span className=\"text-danger\">{errors.userID}</span>}\n//         </div>\n\n//         <button type=\"submit\" className=\"dis-regi-submit\">Register</button>\n//       </form>\n//     </div>\n//   </div>\n// </div>\n\n//   );\n// }\n\n// export default DistributorRegiForm;\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FaUserEdit, FaTrashAlt, FaPlusCircle } from 'react-icons/fa';\nimport './DistributorRegiForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DistributorRegiForm() {\n  _s();\n  const [values, setValues] = useState({\n    disName: '',\n    disEmail: '',\n    disPhone: '',\n    disLocation: '',\n    userID: ''\n  });\n  const [updateValues, setUpdateValues] = useState({\n    userID: '',\n    disName: '',\n    disEmail: '',\n    disPhone: '',\n    disLocation: ''\n  });\n  const [deleteUserID, setDeleteUserID] = useState('');\n  const [deleteEmail, setDeleteEmail] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch('http://localhost:8800/api/distributor/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(values)\n      });\n      const result = await response.json();\n      if (response.ok) {\n        alert(result.message || 'Distributor registered successfully');\n        window.location.href = '/distributorPanel';\n      } else {\n        alert(result.error || 'This user ID is wrong or already assigned. Please sign up.');\n        navigate('/signup');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const handleUpdate = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:8800/api/distributor/update/${updateValues.userID}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userID: updateValues.userID,\n          disName: updateValues.disName,\n          disEmail: updateValues.disEmail,\n          disPhone: updateValues.disPhone,\n          disLocation: updateValues.disLocation,\n          email: updateValues.disEmail // Ensure this is included\n        })\n      });\n      const result = await response.json();\n      alert(response.ok ? 'Distributor updated successfully' : result.error || 'Failed to update distributor');\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  // const handleDelete = async (event) => {\n  //   event.preventDefault();\n  //   try {\n  //     const response = await fetch(`http://localhost:8800/api/distributor/delete/${deleteUserID}`, {\n  //       method: 'DELETE'\n  //     });\n  //     const result = await response.json();\n  //     alert(response.ok ? 'Distributor deleted successfully' : result.error || 'Failed to delete distributor');\n  //     window.location.href = '/distributorPanel';\n  //   } catch (error) {\n  //     console.error('Error:', error);\n  //   }\n  // };\n\n  const handleDelete = async event => {\n    event.preventDefault();\n\n    // Confirm before deletion\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this distributor?\");\n    if (!confirmDelete) return;\n    try {\n      const response = await fetch(`http://localhost:8800/api/distributor/delete/${deleteUserID}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userID: deleteUserID,\n          email: deleteEmail\n        })\n      });\n      const result = await response.json();\n      alert(response.ok ? 'Distributor deleted successfully' : result.error || 'Failed to delete distributor');\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"distributor-management\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Distributor Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [/*#__PURE__*/_jsxDEV(FaPlusCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), \" Register Distributor\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"disName\",\n          placeholder: \"Distributor Name\",\n          onChange: e => setValues({\n            ...values,\n            disName: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"disEmail\",\n          placeholder: \"Email\",\n          onChange: e => setValues({\n            ...values,\n            disEmail: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"disPhone\",\n          placeholder: \"Phone\",\n          onChange: e => setValues({\n            ...values,\n            disPhone: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"disLocation\",\n          placeholder: \"Location\",\n          onChange: e => setValues({\n            ...values,\n            disLocation: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"userID\",\n          placeholder: \"User ID\",\n          onChange: e => setValues({\n            ...values,\n            userID: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [/*#__PURE__*/_jsxDEV(FaUserEdit, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this), \" Update Distributor\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleUpdate,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"userID\",\n          placeholder: \"User ID\",\n          onChange: e => setUpdateValues({\n            ...updateValues,\n            userID: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"disName\",\n          placeholder: \"New Name\",\n          onChange: e => setUpdateValues({\n            ...updateValues,\n            disName: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"disEmail\",\n          placeholder: \"New Email\",\n          onChange: e => setUpdateValues({\n            ...updateValues,\n            disEmail: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"disPhone\",\n          placeholder: \"New Phone\",\n          onChange: e => setUpdateValues({\n            ...updateValues,\n            disPhone: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"disLocation\",\n          placeholder: \"New Location\",\n          onChange: e => setUpdateValues({\n            ...updateValues,\n            disLocation: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [/*#__PURE__*/_jsxDEV(FaTrashAlt, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this), \" Delete Distributor\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleDelete,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"userID\",\n          placeholder: \"User ID\",\n          onChange: e => setDeleteUserID(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-input\",\n          type: \"email\",\n          placeholder: \"Email\",\n          onChange: e => setDeleteEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 267,\n    columnNumber: 5\n  }, this);\n}\n_s(DistributorRegiForm, \"u0bxJk4XervGXAURhEV1SX3ZQ10=\", false, function () {\n  return [useNavigate];\n});\n_c = DistributorRegiForm;\nexport default DistributorRegiForm;\nvar _c;\n$RefreshReg$(_c, \"DistributorRegiForm\");","map":{"version":3,"names":["React","useState","useNavigate","FaUserEdit","FaTrashAlt","FaPlusCircle","jsxDEV","_jsxDEV","DistributorRegiForm","_s","values","setValues","disName","disEmail","disPhone","disLocation","userID","updateValues","setUpdateValues","deleteUserID","setDeleteUserID","deleteEmail","setDeleteEmail","navigate","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","json","ok","alert","message","window","location","href","error","console","handleUpdate","email","handleDelete","confirmDelete","confirm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","placeholder","onChange","e","target","value","required","_c","$RefreshReg$"],"sources":["G:/My 2025/Study/Pawprint-Dogcare-main/Pawprint-Dogcare-main/Client/src/Components/DistributorRegiForm.jsx"],"sourcesContent":["// import React, { useState } from 'react';\n// import './DistributorRegiForm.css';\n// import { useNavigate } from 'react-router-dom';\n\n// function DistributorRegiForm() {\n//   const [values, setValues] = useState({\n//     disName: '',\n//     disEmail: '',\n//     disPhone: '',\n//     disLocation: '',\n//     userID: ''\n//   });\n\n//   const [errors, setErrors] = useState({});\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     const validationErrors = validateInputs(values);\n//     setErrors(validationErrors);\n\n//     if (Object.keys(validationErrors).length === 0) {\n//       try {\n//         const response = await fetch('http://localhost:8800/api/distributor/register', {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json'\n//           },\n//           body: JSON.stringify(values)\n//         });\n\n//         const result = await response.json();\n\n//         if (response.ok) {\n//           alert(result.message || 'Distributor registered successfully');\n//           window.location.href = '/pet/register';\n//         } else {\n//           alert(result.error || 'This user ID is wrong or already assigned. Please sign up.');\n//           navigate('/signup');\n//         }\n//       } catch (error) {\n//         console.error('Error:', error);\n//       }\n//     }\n//   };\n\n//   const handleInput = (event) => {\n//     const { name, value } = event.target;\n//     setValues((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   const validateInputs = (values) => {\n//     let errors = {};\n//     if (!values.disName) errors.disName = 'Distributor Name is required';\n//     if (!values.disEmail) errors.disEmail = 'Distributor Email is required';\n//     if (!values.disPhone) errors.disPhone = 'Distributor Phone is required';\n//     if (!values.disLocation) errors.disLocation = 'Distributor Location is required';\n//     if (!values.userID) errors.userID = 'User ID is required';\n//     return errors;\n//   };\n\n//   const backgroundStyle = {\n//     backgroundImage: \"url('/images/login1.jpg')\",\n//     backgroundSize: 'cover',\n//     backgroundPosition: 'center',\n//     minHeight: '100vh',\n//     display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'center'\n//   };\n\n//   return (\n//     <div className=\"dis-form-container\" style={backgroundStyle}>\n//        <h1 className=\"dis-welcome-message\">Join Our Network</h1>\n//   <div className=\"dis-registration-card\">\n   \n//     <div className=\"dis-registration-card-body\">\n//       <h2 className=\"dis-regi-form-name\">Distributor Registration</h2>\n//       <form onSubmit={handleSubmit}>\n//         <div className=\"dis-form-group\">\n//           <label htmlFor=\"disName\">Distributor Name</label>\n//           <input\n//             type=\"text\"\n//             name=\"disName\"\n//             value={values.disName}\n//             onChange={handleInput}\n//             required\n//             placeholder=\"Enter Distributor Name\"\n//           />\n//           {errors.disName && <span className=\"text-danger\">{errors.disName}</span>}\n//         </div>\n\n//         <div className=\"dis-form-group\">\n//           <label htmlFor=\"disEmail\">Distributor Email</label>\n//           <input\n//             type=\"email\"\n//             name=\"disEmail\"\n//             value={values.disEmail}\n//             onChange={handleInput}\n//             required\n//             placeholder=\"Enter Distributor Email\"\n//           />\n//           {errors.disEmail && <span className=\"text-danger\">{errors.disEmail}</span>}\n//         </div>\n\n//         <div className=\"dis-form-group\">\n//           <label htmlFor=\"disPhone\">Distributor Phone</label>\n//           <input\n//             type=\"text\"\n//             name=\"disPhone\"\n//             value={values.disPhone}\n//             onChange={handleInput}\n//             required\n//             placeholder=\"Enter Phone\"\n//           />\n//           {errors.disPhone && <span className=\"text-danger\">{errors.disPhone}</span>}\n//         </div>\n\n//         <div className=\"dis-form-group\">\n//           <label htmlFor=\"disLocation\">Distributor Location</label>\n//           <input\n//             type=\"text\"\n//             name=\"disLocation\"\n//             value={values.disLocation}\n//             onChange={handleInput}\n//             required\n//             placeholder=\"Enter Location\"\n//           />\n//           {errors.disLocation && <span className=\"text-danger\">{errors.disLocation}</span>}\n//         </div>\n\n//         <div className=\"dis-form-group\">\n//           <label htmlFor=\"userID\">User ID</label>\n//           <input\n//             type=\"text\"\n//             name=\"userID\"\n//             value={values.userID}\n//             onChange={handleInput}\n//             required\n//             placeholder=\"Enter User ID\"\n//           />\n//           {errors.userID && <span className=\"text-danger\">{errors.userID}</span>}\n//         </div>\n\n//         <button type=\"submit\" className=\"dis-regi-submit\">Register</button>\n//       </form>\n//     </div>\n//   </div>\n// </div>\n\n//   );\n// }\n\n// export default DistributorRegiForm;\n\n\n\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FaUserEdit, FaTrashAlt, FaPlusCircle } from 'react-icons/fa';\nimport './DistributorRegiForm.css';\n\nfunction DistributorRegiForm() {\n  const [values, setValues] = useState({\n    disName: '',\n    disEmail: '',\n    disPhone: '',\n    disLocation: '',\n    userID: ''\n  });\n  \n  const [updateValues, setUpdateValues] = useState({\n    userID: '',\n    disName: '',\n    disEmail: '',\n    disPhone: '',\n    disLocation: ''\n  });\n  \n  const [deleteUserID, setDeleteUserID] = useState('');\n  const [deleteEmail, setDeleteEmail] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const response = await fetch('http://localhost:8800/api/distributor/register', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(values)\n      });\n      const result = await response.json();\n      if (response.ok) {\n        alert(result.message || 'Distributor registered successfully');\n        window.location.href = '/distributorPanel';\n      } else {\n        alert(result.error || 'This user ID is wrong or already assigned. Please sign up.');\n        navigate('/signup');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  const handleUpdate = async (event) => {\n    event.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:8800/api/distributor/update/${updateValues.userID}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          userID: updateValues.userID,\n          disName: updateValues.disName,\n          disEmail: updateValues.disEmail,\n          disPhone: updateValues.disPhone,\n          disLocation: updateValues.disLocation,\n          email: updateValues.disEmail  // Ensure this is included\n        })\n      });\n      const result = await response.json();\n      alert(response.ok ? 'Distributor updated successfully' : result.error || 'Failed to update distributor');\n      \n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  // const handleDelete = async (event) => {\n  //   event.preventDefault();\n  //   try {\n  //     const response = await fetch(`http://localhost:8800/api/distributor/delete/${deleteUserID}`, {\n  //       method: 'DELETE'\n  //     });\n  //     const result = await response.json();\n  //     alert(response.ok ? 'Distributor deleted successfully' : result.error || 'Failed to delete distributor');\n  //     window.location.href = '/distributorPanel';\n  //   } catch (error) {\n  //     console.error('Error:', error);\n  //   }\n  // };\n\n  const handleDelete = async (event) => {\n    event.preventDefault();\n  \n    // Confirm before deletion\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this distributor?\");\n    if (!confirmDelete) return;\n  \n    try {\n      const response = await fetch(`http://localhost:8800/api/distributor/delete/${deleteUserID}`, {\n        method: 'DELETE',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ userID: deleteUserID, email: deleteEmail })\n      });\n      \n      const result = await response.json();\n      alert(response.ok ? 'Distributor deleted successfully' : result.error || 'Failed to delete distributor');\n      \n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  \n\n  return (\n    <div className=\"distributor-management\">\n      <h1>Distributor Management</h1>\n      \n      <div className=\"form-section\">\n        <h2><FaPlusCircle /> Register Distributor</h2>\n        <form onSubmit={handleSubmit}>\n          <input type=\"text\" name=\"disName\" placeholder=\"Distributor Name\" onChange={(e) => setValues({...values, disName: e.target.value})} required />\n          <input type=\"email\" name=\"disEmail\" placeholder=\"Email\" onChange={(e) => setValues({...values, disEmail: e.target.value})} required />\n          <input type=\"text\" name=\"disPhone\" placeholder=\"Phone\" onChange={(e) => setValues({...values, disPhone: e.target.value})} required />\n          <input type=\"text\" name=\"disLocation\" placeholder=\"Location\" onChange={(e) => setValues({...values, disLocation: e.target.value})} required />\n          <input type=\"text\" name=\"userID\" placeholder=\"User ID\" onChange={(e) => setValues({...values, userID: e.target.value})} required />\n          <button type=\"submit\">Register</button>\n        </form>\n      </div>\n\n      <div className=\"form-section\">\n        <h2><FaUserEdit /> Update Distributor</h2>\n        <form onSubmit={handleUpdate}>\n          <input type=\"text\" name=\"userID\" placeholder=\"User ID\" onChange={(e) => setUpdateValues({...updateValues, userID: e.target.value})} required />\n          <input type=\"text\" name=\"disName\" placeholder=\"New Name\" onChange={(e) => setUpdateValues({...updateValues, disName: e.target.value})} />\n          <input type=\"email\" name=\"disEmail\" placeholder=\"New Email\" onChange={(e) => setUpdateValues({...updateValues, disEmail: e.target.value})} />\n          <input type=\"text\" name=\"disPhone\" placeholder=\"New Phone\" onChange={(e) => setUpdateValues({...updateValues, disPhone: e.target.value})} />\n          <input type=\"text\" name=\"disLocation\" placeholder=\"New Location\" onChange={(e) => setUpdateValues({...updateValues, disLocation: e.target.value})} />\n          <button type=\"submit\">Update</button>\n        </form>\n      </div>\n\n      <div className=\"form-section\">\n        <h2><FaTrashAlt /> Delete Distributor</h2>\n        <form onSubmit={handleDelete}>\n          <input type=\"text\" name=\"userID\" placeholder=\"User ID\" onChange={(e) => setDeleteUserID(e.target.value)} required />\n          <input className=\"form-input\" type=\"email\" placeholder=\"Email\" onChange={(e) => setDeleteEmail(e.target.value)} required />\n          <button type=\"submit\">Delete</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default DistributorRegiForm;"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAKA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,UAAU,EAAEC,UAAU,EAAEC,YAAY,QAAQ,gBAAgB;AACrE,OAAO,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,mBAAmBA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC;IACnCW,OAAO,EAAE,EAAE;IACXC,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,WAAW,EAAE,EAAE;IACfC,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC;IAC/Ce,MAAM,EAAE,EAAE;IACVJ,OAAO,EAAE,EAAE;IACXC,QAAQ,EAAE,EAAE;IACZC,QA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}