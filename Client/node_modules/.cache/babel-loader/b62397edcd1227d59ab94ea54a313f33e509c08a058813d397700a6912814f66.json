{"ast":null,"code":"var _jsxFileName = \"G:\\\\My 2025\\\\Study\\\\Pawprint-Dogcare-main\\\\Pawprint-Dogcare-main\\\\Client\\\\src\\\\Components\\\\AdopterRegiForm.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import './AdopterRegiForm.css';\n\n// function AdopterRegiForm() {\n//   const [values, setValues] = useState({\n//     userID: '',\n//     adoName: '',\n//     adoNIC: '',\n//     adoAge: '',\n//     adoJob: '',\n//     adoGender: '',\n//     adoLocation: '',\n//     adoEmail: '',\n//     adoPhone: '',\n//     houseHoldComposition: '',\n//     reasonForAdoption: ''\n//   });\n\n//   const [errors, setErrors] = useState({});\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     const validationErrors = validateInputs(values);\n//     setErrors(validationErrors);\n\n//     if (Object.keys(validationErrors).length === 0) {\n//       try {\n//         const response = await fetch('http://localhost:8800/api/adopterRegi/register', {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json'\n//           },\n//           body: JSON.stringify(values)\n//         });\n//         if (response.ok) {\n//           alert('Adopter registered successfully');\n//           // window.location.href = '/services';\n//         } else {\n//           console.error('Error storing data:', response.statusText);\n//         }\n//       } catch (error) {\n//         console.error('Error:', error);\n//       }\n//     }\n//   };\n\n//   const handleInput = (event) => {\n//     const { name, value } = event.target;\n//     setValues(prev => ({ ...prev, [name]: value }));\n//   };\n\n//   const validateInputs = (values) => {\n//     let errors = {};\n//     if (!values.userID) errors.userID = 'User ID is required';\n//     if (!values.adoName) errors.adoName = 'Adopter Name is required';\n//     if (!values.adoNIC) errors.adoNIC = 'Adopter NIC is required';\n//     if (!values.adoAge) errors.adoAge = 'Adopter Age is required';\n//     if (!values.adoJob) errors.adoJob = 'Adopter Job is required';\n//     if (!values.adoGender) errors.adoGender = 'Adopter Gender is required';\n//     if (!values.adoLocation) errors.adoLocation = 'Adopter Location is required';\n//     if (!values.adoEmail) errors.adoEmail = 'Adopter Email is required';\n//     if (!values.adoPhone) errors.adoPhone = 'Adopter Phone is required';\n//     if (!values.houseHoldComposition) errors.houseHoldComposition = 'Household Composition is required';\n//     if (!values.reasonForAdoption) errors.reasonForAdoption = 'Reason for Adoption is required';\n//     return errors;\n//   };\n\n//   const backgroundStyle = {\n//     backgroundImage: \"url('/images/login1.jpg')\",\n//     backgroundSize: 'cover',\n//     backgroundPosition: 'center',\n//     minHeight: '100vh',\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//     justifyContent: 'center'\n//   };\n\n//   return (\n//     <div className=\"form-container\" style={backgroundStyle}>\n//       <div className=\"ado-regi-card\">\n//         <div className=\"ado-regi-card-body\">\n//           <h2 className=\"ado-regi-form-name\">Adopter Registration</h2>\n//           <form onSubmit={handleSubmit}>\n//             {Object.keys(values).map(key => (\n//               <div className=\"form-group\" key={key}>\n//                 <label htmlFor={key}>{key.split(/(?=[A-Z])/).join(' ')}</label>\n//                 <input\n//                   type={key === 'adoEmail' ? 'email' : 'text'}\n//                   name={key}\n//                   value={values[key]}\n//                   onChange={handleInput}\n//                   required\n//                   placeholder={`Enter ${key.split(/(?=[A-Z])/).join(' ')}`}\n//                   className=\"form-control rounded\"\n//                 />\n//                 {errors[key] && <span className=\"text-danger\">{errors[key]}</span>}\n//               </div>\n//             ))}\n//             <button type=\"submit\">Register</button>\n//           </form>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default AdopterRegiForm;\n\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { FaUserEdit, FaTrashAlt, FaPlusCircle } from 'react-icons/fa';\n// import './AdopterRegiForm.css';\n\n// function AdopterRegiForm() {\n//   const [values, setValues] = useState({\n//     userID: '',\n//     adoName: '',\n//     adoNIC: '',\n//     adoAge: '',\n//     adoGender: '',\n//     adoJob: '',\n//     adoLocation: '',\n//     adoEmail: '',\n//     adoPhone: ''\n//   });\n\n//   const [updateValues, setUpdateValues] = useState({\n//     userID: '',\n//     adoName: '',\n//     adoNIC: '',\n//     adoAge: '',\n//     adoGender: '',\n//     adoJob: '',\n//     adoLocation: '',\n//     adoEmail: '',\n//     adoPhone: ''\n//   });\n\n//   const [deleteUserID, setDeleteUserID] = useState('');\n//   const [deleteEmail, setDeleteEmail] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     try {\n//       const response = await fetch('http://localhost:8800/api/adopter/register', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify(values)\n//       });\n//       const result = await response.json();\n//       if (response.ok) {\n//         alert(result.message || 'Adopter registered successfully');\n//         window.location.href = '/adopterPanel';\n//       } else {\n//         alert(result.error || 'This user ID is wrong or already assigned. Please sign up.');\n//         navigate('/signup');\n//       }\n//     } catch (error) {\n//       console.error('Error:', error);\n//     }\n//   };\n\n//   const handleUpdate = async (event) => {\n//     event.preventDefault();\n//     try {\n//       const response = await fetch(`http://localhost:8800/api/adopter/update/${updateValues.userID}`, {\n//         method: 'PUT',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify(updateValues)\n//       });\n//       const result = await response.json();\n//       alert(response.ok ? 'Adopter updated successfully' : result.error || 'Failed to update adopter');\n//     } catch (error) {\n//       console.error('Error:', error);\n//     }\n//   };\n\n//   // const handleDelete = async (event) => {\n//   //   event.preventDefault();\n//   //   try {\n//   //     const response = await fetch(`http://localhost:8800/api/adopter/delete/${deleteUserID}`, {\n//   //       method: 'DELETE'\n//   //     });\n//   //     const result = await response.json();\n//   //     alert(response.ok ? 'Adopter deleted successfully' : result.error || 'Failed to delete adopter');\n//   //   } catch (error) {\n//   //     console.error('Error:', error);\n//   //   }\n//   // };\n\n//   const handleDelete = async (event) => {\n//     event.preventDefault();\n//     const confirmDelete = window.confirm(\"Are you sure you want to delete this adopter?\");\n//     if (!confirmDelete) return;\n\n//     try {\n//         const response = await fetch(`http://localhost:8800/api/adopter/delete/${deleteUserID}`, {\n//             method: 'DELETE',\n//             headers: { 'Content-Type': 'application/json' },\n//             body: JSON.stringify({ adoEmail: deleteEmail }) // Sending email for validation\n//         });\n\n//         const result = await response.json();\n//         alert(response.ok ? 'Adopter deleted successfully' : result.error || 'Failed to delete adopter');\n//     } catch (error) {\n//         console.error('Error:', error);\n//     }\n// };\n\n//   return (\n//     <div className=\"adopter-management\">\n//       <h1 className=\"adopter-management-title\">Adopter Management</h1>\n\n//       <div className=\"form-section\">\n//         <h2 className=\"form-section-title\"><FaPlusCircle /> Register Adopter</h2>\n//         <form onSubmit={handleSubmit}>\n//           <input className=\"form-input\" type=\"text\" placeholder=\"User ID\" onChange={(e) => setValues({...values, userID: e.target.value})} required />\n//           <input className=\"form-input\" type=\"text\" placeholder=\"Name\" onChange={(e) => setValues({...values, adoName: e.target.value})} required />\n//           <input className=\"form-input\" type=\"text\" placeholder=\"NIC\" onChange={(e) => setValues({...values, adoNIC: e.target.value})} required />\n//           <input className=\"form-input\" type=\"number\" placeholder=\"Age\" onChange={(e) => setValues({...values, adoAge: e.target.value})} required />\n//           <select className=\"form-input\" onChange={(e) => setValues({...values, adoGender: e.target.value})} required>\n//             <option value=\"\">Select Gender</option>\n//             <option value=\"Male\">Male</option>\n//             <option value=\"Female\">Female</option>\n//             <option value=\"Other\">Other</option>\n//           </select>\n//           <input className=\"form-input\" type=\"text\" placeholder=\"Job\" onChange={(e) => setValues({...values, adoJob: e.target.value})} required />\n//           <input className=\"form-input\" type=\"text\" placeholder=\"Location\" onChange={(e) => setValues({...values, adoLocation: e.target.value})} required />\n//           <input className=\"form-input\" type=\"email\" placeholder=\"Email\" onChange={(e) => setValues({...values, adoEmail: e.target.value})} required />\n//           <input className=\"form-input\" type=\"text\" placeholder=\"Phone\" onChange={(e) => setValues({...values, adoPhone: e.target.value})} required />\n//           <button className=\"form-button\" type=\"submit\">Register</button>\n//         </form>\n//       </div>\n\n//       <div className=\"form-section\">\n//         <h2 className=\"form-section-title\"><FaUserEdit /> Update Adopter</h2>\n//         <form onSubmit={handleUpdate}>\n//           <input className=\"form-input\" type=\"text\" placeholder=\"User ID\" onChange={(e) => setUpdateValues({...updateValues, userID: e.target.value})} required />\n//           <input className=\"form-input\" type=\"text\" placeholder=\"New Name\" onChange={(e) => setUpdateValues({...updateValues, adoName: e.target.value})} />\n//           <input className=\"form-input\" type=\"text\" placeholder=\"New NIC\" onChange={(e) => setUpdateValues({...updateValues, adoNIC: e.target.value})} />\n//           <input className=\"form-input\" type=\"number\" placeholder=\"New Age\" onChange={(e) => setUpdateValues({...updateValues, adoAge: e.target.value})} />\n//           <select className=\"form-input\" onChange={(e) => setUpdateValues({...updateValues, adoGender: e.target.value})}>\n//             <option value=\"\">Select Gender</option>\n//             <option value=\"Male\">Male</option>\n//             <option value=\"Female\">Female</option>\n//             <option value=\"Other\">Other</option>\n//           </select>\n//           <input className=\"form-input\" type=\"text\" placeholder=\"New Job\" onChange={(e) => setUpdateValues({...updateValues, adoJob: e.target.value})} />\n//           <input className=\"form-input\" type=\"text\" placeholder=\"New Location\" onChange={(e) => setUpdateValues({...updateValues, adoLocation: e.target.value})} />\n//           <input className=\"form-input\" type=\"email\" placeholder=\"New Email\" onChange={(e) => setUpdateValues({...updateValues, adoEmail: e.target.value})} />\n//           <input className=\"form-input\" type=\"text\" placeholder=\"New Phone\" onChange={(e) => setUpdateValues({...updateValues, adoPhone: e.target.value})} />\n//           <button className=\"form-button\" type=\"submit\">Update</button>\n//         </form>\n//       </div>\n\n//       <div className=\"form-section\">\n//         <h2 className=\"form-section-title\"><FaTrashAlt /> Delete Adopter</h2>\n//         <form onSubmit={handleDelete}>\n//           <input className=\"form-input\" type=\"text\" placeholder=\"User ID\" onChange={(e) => setDeleteUserID(e.target.value)} required />\n//           <input className=\"form-input\" type=\"email\" placeholder=\"Email\" onChange={(e) => setDeleteEmail(e.target.value)} required />\n//           <button className=\"form-button\" type=\"submit\">Delete</button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default AdopterRegiForm;\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PetManagement = () => {\n  _s();\n  const [pets, setPets] = useState([]);\n  const [petID, setPetID] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [breed, setBreed] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [userID, setUserID] = useState(localStorage.getItem(\"userID\") || \"\");\n  useEffect(() => {\n    fetchPets();\n  }, []);\n  const fetchPets = async () => {\n    try {\n      const response = await axios.get(\"/api/pets\");\n      setPets(response.data);\n    } catch (error) {\n      console.error(\"Error fetching pets\", error);\n    }\n  };\n  const handleUpdate = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.put(`/api/pets/${petID}`, {\n        name,\n        breed,\n        age,\n        userID\n      });\n      alert(response.data.message);\n      fetchPets();\n    } catch (error) {\n      alert(\"Error updating pet: \" + error.response.data.error);\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      await axios.delete(`/api/pets/${id}`, {\n        data: {\n          userID\n        }\n      });\n      alert(\"Pet deleted successfully\");\n      fetchPets();\n    } catch (error) {\n      alert(\"Error deleting pet: \" + error.response.data.error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pet Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpdate,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Pet ID\",\n        value: petID,\n        onChange: e => setPetID(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Breed\",\n        value: breed,\n        onChange: e => setBreed(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Age\",\n        value: age,\n        onChange: e => setAge(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Pet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Pet List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: pets.map(pet => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [pet.name, \" (\", pet.breed, \", \", pet.age, \" years old)\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(pet.petID),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }, this)]\n      }, pet.petID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 321,\n    columnNumber: 5\n  }, this);\n};\n_s(PetManagement, \"z2CPm6OFmSAO0bvZev2ziIekjwI=\");\n_c = PetManagement;\nexport default PetManagement;\nvar _c;\n$RefreshReg$(_c, \"PetManagement\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","PetManagement","_s","pets","setPets","petID","setPetID","name","setName","breed","setBreed","age","setAge","userID","setUserID","localStorage","getItem","fetchPets","response","get","data","error","console","handleUpdate","e","preventDefault","put","alert","message","handleDelete","id","delete","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","map","pet","onClick","_c","$RefreshReg$"],"sources":["G:/My 2025/Study/Pawprint-Dogcare-main/Pawprint-Dogcare-main/Client/src/Components/AdopterRegiForm.jsx"],"sourcesContent":["// import React, { useState } from 'react';\n// import './AdopterRegiForm.css';\n\n// function AdopterRegiForm() {\n//   const [values, setValues] = useState({\n//     userID: '',\n//     adoName: '',\n//     adoNIC: '',\n//     adoAge: '',\n//     adoJob: '',\n//     adoGender: '',\n//     adoLocation: '',\n//     adoEmail: '',\n//     adoPhone: '',\n//     houseHoldComposition: '',\n//     reasonForAdoption: ''\n//   });\n\n//   const [errors, setErrors] = useState({});\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     const validationErrors = validateInputs(values);\n//     setErrors(validationErrors);\n\n//     if (Object.keys(validationErrors).length === 0) {\n//       try {\n//         const response = await fetch('http://localhost:8800/api/adopterRegi/register', {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json'\n//           },\n//           body: JSON.stringify(values)\n//         });\n//         if (response.ok) {\n//           alert('Adopter registered successfully');\n//           // window.location.href = '/services';\n//         } else {\n//           console.error('Error storing data:', response.statusText);\n//         }\n//       } catch (error) {\n//         console.error('Error:', error);\n//       }\n//     }\n//   };\n\n//   const handleInput = (event) => {\n//     const { name, value } = event.target;\n//     setValues(prev => ({ ...prev, [name]: value }));\n//   };\n\n//   const validateInputs = (values) => {\n//     let errors = {};\n//     if (!values.userID) errors.userID = 'User ID is required';\n//     if (!values.adoName) errors.adoName = 'Adopter Name is required';\n//     if (!values.adoNIC) errors.adoNIC = 'Adopter NIC is required';\n//     if (!values.adoAge) errors.adoAge = 'Adopter Age is required';\n//     if (!values.adoJob) errors.adoJob = 'Adopter Job is required';\n//     if (!values.adoGender) errors.adoGender = 'Adopter Gender is required';\n//     if (!values.adoLocation) errors.adoLocation = 'Adopter Location is required';\n//     if (!values.adoEmail) errors.adoEmail = 'Adopter Email is required';\n//     if (!values.adoPhone) errors.adoPhone = 'Adopter Phone is required';\n//     if (!values.houseHoldComposition) errors.houseHoldComposition = 'Household Composition is required';\n//     if (!values.reasonForAdoption) errors.reasonForAdoption = 'Reason for Adoption is required';\n//     return errors;\n//   };\n\n//   const backgroundStyle = {\n//     backgroundImage: \"url('/images/login1.jpg')\",\n//     backgroundSize: 'cover',\n//     backgroundPosition: 'center',\n//     minHeight: '100vh',\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//     justifyContent: 'center'\n//   };\n\n//   return (\n//     <div className=\"form-container\" style={backgroundStyle}>\n//       <div className=\"ado-regi-card\">\n//         <div className=\"ado-regi-card-body\">\n//           <h2 className=\"ado-regi-form-name\">Adopter Registration</h2>\n//           <form onSubmit={handleSubmit}>\n//             {Object.keys(values).map(key => (\n//               <div className=\"form-group\" key={key}>\n//                 <label htmlFor={key}>{key.split(/(?=[A-Z])/).join(' ')}</label>\n//                 <input\n//                   type={key === 'adoEmail' ? 'email' : 'text'}\n//                   name={key}\n//                   value={values[key]}\n//                   onChange={handleInput}\n//                   required\n//                   placeholder={`Enter ${key.split(/(?=[A-Z])/).join(' ')}`}\n//                   className=\"form-control rounded\"\n//                 />\n//                 {errors[key] && <span className=\"text-danger\">{errors[key]}</span>}\n//               </div>\n//             ))}\n//             <button type=\"submit\">Register</button>\n//           </form>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default AdopterRegiForm;\n\n\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { FaUserEdit, FaTrashAlt, FaPlusCircle } from 'react-icons/fa';\n// import './AdopterRegiForm.css';\n\n// function AdopterRegiForm() {\n//   const [values, setValues] = useState({\n//     userID: '',\n//     adoName: '',\n//     adoNIC: '',\n//     adoAge: '',\n//     adoGender: '',\n//     adoJob: '',\n//     adoLocation: '',\n//     adoEmail: '',\n//     adoPhone: ''\n//   });\n\n//   const [updateValues, setUpdateValues] = useState({\n//     userID: '',\n//     adoName: '',\n//     adoNIC: '',\n//     adoAge: '',\n//     adoGender: '',\n//     adoJob: '',\n//     adoLocation: '',\n//     adoEmail: '',\n//     adoPhone: ''\n//   });\n\n//   const [deleteUserID, setDeleteUserID] = useState('');\n//   const [deleteEmail, setDeleteEmail] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     try {\n//       const response = await fetch('http://localhost:8800/api/adopter/register', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify(values)\n//       });\n//       const result = await response.json();\n//       if (response.ok) {\n//         alert(result.message || 'Adopter registered successfully');\n//         window.location.href = '/adopterPanel';\n//       } else {\n//         alert(result.error || 'This user ID is wrong or already assigned. Please sign up.');\n//         navigate('/signup');\n//       }\n//     } catch (error) {\n//       console.error('Error:', error);\n//     }\n//   };\n\n//   const handleUpdate = async (event) => {\n//     event.preventDefault();\n//     try {\n//       const response = await fetch(`http://localhost:8800/api/adopter/update/${updateValues.userID}`, {\n//         method: 'PUT',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify(updateValues)\n//       });\n//       const result = await response.json();\n//       alert(response.ok ? 'Adopter updated successfully' : result.error || 'Failed to update adopter');\n//     } catch (error) {\n//       console.error('Error:', error);\n//     }\n//   };\n\n//   // const handleDelete = async (event) => {\n//   //   event.preventDefault();\n//   //   try {\n//   //     const response = await fetch(`http://localhost:8800/api/adopter/delete/${deleteUserID}`, {\n//   //       method: 'DELETE'\n//   //     });\n//   //     const result = await response.json();\n//   //     alert(response.ok ? 'Adopter deleted successfully' : result.error || 'Failed to delete adopter');\n//   //   } catch (error) {\n//   //     console.error('Error:', error);\n//   //   }\n//   // };\n\n//   const handleDelete = async (event) => {\n//     event.preventDefault();\n//     const confirmDelete = window.confirm(\"Are you sure you want to delete this adopter?\");\n//     if (!confirmDelete) return;\n\n//     try {\n//         const response = await fetch(`http://localhost:8800/api/adopter/delete/${deleteUserID}`, {\n//             method: 'DELETE',\n//             headers: { 'Content-Type': 'application/json' },\n//             body: JSON.stringify({ adoEmail: deleteEmail }) // Sending email for validation\n//         });\n\n//         const result = await response.json();\n//         alert(response.ok ? 'Adopter deleted successfully' : result.error || 'Failed to delete adopter');\n//     } catch (error) {\n//         console.error('Error:', error);\n//     }\n// };\n\n\n//   return (\n//     <div className=\"adopter-management\">\n//       <h1 className=\"adopter-management-title\">Adopter Management</h1>\n      \n//       <div className=\"form-section\">\n//         <h2 className=\"form-section-title\"><FaPlusCircle /> Register Adopter</h2>\n//         <form onSubmit={handleSubmit}>\n//           <input className=\"form-input\" type=\"text\" placeholder=\"User ID\" onChange={(e) => setValues({...values, userID: e.target.value})} required />\n//           <input className=\"form-input\" type=\"text\" placeholder=\"Name\" onChange={(e) => setValues({...values, adoName: e.target.value})} required />\n//           <input className=\"form-input\" type=\"text\" placeholder=\"NIC\" onChange={(e) => setValues({...values, adoNIC: e.target.value})} required />\n//           <input className=\"form-input\" type=\"number\" placeholder=\"Age\" onChange={(e) => setValues({...values, adoAge: e.target.value})} required />\n//           <select className=\"form-input\" onChange={(e) => setValues({...values, adoGender: e.target.value})} required>\n//             <option value=\"\">Select Gender</option>\n//             <option value=\"Male\">Male</option>\n//             <option value=\"Female\">Female</option>\n//             <option value=\"Other\">Other</option>\n//           </select>\n//           <input className=\"form-input\" type=\"text\" placeholder=\"Job\" onChange={(e) => setValues({...values, adoJob: e.target.value})} required />\n//           <input className=\"form-input\" type=\"text\" placeholder=\"Location\" onChange={(e) => setValues({...values, adoLocation: e.target.value})} required />\n//           <input className=\"form-input\" type=\"email\" placeholder=\"Email\" onChange={(e) => setValues({...values, adoEmail: e.target.value})} required />\n//           <input className=\"form-input\" type=\"text\" placeholder=\"Phone\" onChange={(e) => setValues({...values, adoPhone: e.target.value})} required />\n//           <button className=\"form-button\" type=\"submit\">Register</button>\n//         </form>\n//       </div>\n\n//       <div className=\"form-section\">\n//         <h2 className=\"form-section-title\"><FaUserEdit /> Update Adopter</h2>\n//         <form onSubmit={handleUpdate}>\n//           <input className=\"form-input\" type=\"text\" placeholder=\"User ID\" onChange={(e) => setUpdateValues({...updateValues, userID: e.target.value})} required />\n//           <input className=\"form-input\" type=\"text\" placeholder=\"New Name\" onChange={(e) => setUpdateValues({...updateValues, adoName: e.target.value})} />\n//           <input className=\"form-input\" type=\"text\" placeholder=\"New NIC\" onChange={(e) => setUpdateValues({...updateValues, adoNIC: e.target.value})} />\n//           <input className=\"form-input\" type=\"number\" placeholder=\"New Age\" onChange={(e) => setUpdateValues({...updateValues, adoAge: e.target.value})} />\n//           <select className=\"form-input\" onChange={(e) => setUpdateValues({...updateValues, adoGender: e.target.value})}>\n//             <option value=\"\">Select Gender</option>\n//             <option value=\"Male\">Male</option>\n//             <option value=\"Female\">Female</option>\n//             <option value=\"Other\">Other</option>\n//           </select>\n//           <input className=\"form-input\" type=\"text\" placeholder=\"New Job\" onChange={(e) => setUpdateValues({...updateValues, adoJob: e.target.value})} />\n//           <input className=\"form-input\" type=\"text\" placeholder=\"New Location\" onChange={(e) => setUpdateValues({...updateValues, adoLocation: e.target.value})} />\n//           <input className=\"form-input\" type=\"email\" placeholder=\"New Email\" onChange={(e) => setUpdateValues({...updateValues, adoEmail: e.target.value})} />\n//           <input className=\"form-input\" type=\"text\" placeholder=\"New Phone\" onChange={(e) => setUpdateValues({...updateValues, adoPhone: e.target.value})} />\n//           <button className=\"form-button\" type=\"submit\">Update</button>\n//         </form>\n//       </div>\n\n//       <div className=\"form-section\">\n//         <h2 className=\"form-section-title\"><FaTrashAlt /> Delete Adopter</h2>\n//         <form onSubmit={handleDelete}>\n//           <input className=\"form-input\" type=\"text\" placeholder=\"User ID\" onChange={(e) => setDeleteUserID(e.target.value)} required />\n//           <input className=\"form-input\" type=\"email\" placeholder=\"Email\" onChange={(e) => setDeleteEmail(e.target.value)} required />\n//           <button className=\"form-button\" type=\"submit\">Delete</button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default AdopterRegiForm;\n\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst PetManagement = () => {\n  const [pets, setPets] = useState([]);\n  const [petID, setPetID] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [breed, setBreed] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [userID, setUserID] = useState(localStorage.getItem(\"userID\") || \"\");\n\n  useEffect(() => {\n    fetchPets();\n  }, []);\n\n  const fetchPets = async () => {\n    try {\n      const response = await axios.get(\"/api/pets\");\n      setPets(response.data);\n    } catch (error) {\n      console.error(\"Error fetching pets\", error);\n    }\n  };\n\n  const handleUpdate = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.put(`/api/pets/${petID}`, { name, breed, age, userID });\n      alert(response.data.message);\n      fetchPets();\n    } catch (error) {\n      alert(\"Error updating pet: \" + error.response.data.error);\n    }\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      await axios.delete(`/api/pets/${id}`, { data: { userID } });\n      alert(\"Pet deleted successfully\");\n      fetchPets();\n    } catch (error) {\n      alert(\"Error deleting pet: \" + error.response.data.error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Pet Management</h2>\n      <form onSubmit={handleUpdate}>\n        <input type=\"text\" placeholder=\"Pet ID\" value={petID} onChange={(e) => setPetID(e.target.value)} required />\n        <input type=\"text\" placeholder=\"Name\" value={name} onChange={(e) => setName(e.target.value)} required />\n        <input type=\"text\" placeholder=\"Breed\" value={breed} onChange={(e) => setBreed(e.target.value)} required />\n        <input type=\"number\" placeholder=\"Age\" value={age} onChange={(e) => setAge(e.target.value)} required />\n        <button type=\"submit\">Update Pet</button>\n      </form>\n      <h3>Pet List</h3>\n      <ul>\n        {pets.map((pet) => (\n          <li key={pet.petID}>\n            {pet.name} ({pet.breed}, {pet.age} years old)\n            <button onClick={() => handleDelete(pet.petID)}>Delete</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default PetManagement;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}